package(visibility = ["//visibility:public"])

cc_library(
    name = "headers_only",
    hdrs = [
        "include/boost/compute.hpp",
        "include/boost/compute/algorithm.hpp",
        "include/boost/compute/algorithm/accumulate.hpp",
        "include/boost/compute/algorithm/adjacent_difference.hpp",
        "include/boost/compute/algorithm/adjacent_find.hpp",
        "include/boost/compute/algorithm/all_of.hpp",
        "include/boost/compute/algorithm/any_of.hpp",
        "include/boost/compute/algorithm/binary_search.hpp",
        "include/boost/compute/algorithm/copy.hpp",
        "include/boost/compute/algorithm/copy_if.hpp",
        "include/boost/compute/algorithm/copy_n.hpp",
        "include/boost/compute/algorithm/count.hpp",
        "include/boost/compute/algorithm/count_if.hpp",
        "include/boost/compute/algorithm/detail/balanced_path.hpp",
        "include/boost/compute/algorithm/detail/binary_find.hpp",
        "include/boost/compute/algorithm/detail/compact.hpp",
        "include/boost/compute/algorithm/detail/copy_on_device.hpp",
        "include/boost/compute/algorithm/detail/copy_to_device.hpp",
        "include/boost/compute/algorithm/detail/copy_to_host.hpp",
        "include/boost/compute/algorithm/detail/count_if_with_ballot.hpp",
        "include/boost/compute/algorithm/detail/count_if_with_reduce.hpp",
        "include/boost/compute/algorithm/detail/count_if_with_threads.hpp",
        "include/boost/compute/algorithm/detail/find_extrema.hpp",
        "include/boost/compute/algorithm/detail/find_extrema_on_cpu.hpp",
        "include/boost/compute/algorithm/detail/find_extrema_with_atomics.hpp",
        "include/boost/compute/algorithm/detail/find_extrema_with_reduce.hpp",
        "include/boost/compute/algorithm/detail/find_if_with_atomics.hpp",
        "include/boost/compute/algorithm/detail/inplace_reduce.hpp",
        "include/boost/compute/algorithm/detail/insertion_sort.hpp",
        "include/boost/compute/algorithm/detail/merge_path.hpp",
        "include/boost/compute/algorithm/detail/merge_sort_on_cpu.hpp",
        "include/boost/compute/algorithm/detail/merge_sort_on_gpu.hpp",
        "include/boost/compute/algorithm/detail/merge_with_merge_path.hpp",
        "include/boost/compute/algorithm/detail/radix_sort.hpp",
        "include/boost/compute/algorithm/detail/random_fill.hpp",
        "include/boost/compute/algorithm/detail/reduce_by_key.hpp",
        "include/boost/compute/algorithm/detail/reduce_by_key_with_scan.hpp",
        "include/boost/compute/algorithm/detail/reduce_on_cpu.hpp",
        "include/boost/compute/algorithm/detail/reduce_on_gpu.hpp",
        "include/boost/compute/algorithm/detail/scan.hpp",
        "include/boost/compute/algorithm/detail/scan_on_cpu.hpp",
        "include/boost/compute/algorithm/detail/scan_on_gpu.hpp",
        "include/boost/compute/algorithm/detail/search_all.hpp",
        "include/boost/compute/algorithm/detail/serial_accumulate.hpp",
        "include/boost/compute/algorithm/detail/serial_count_if.hpp",
        "include/boost/compute/algorithm/detail/serial_find_extrema.hpp",
        "include/boost/compute/algorithm/detail/serial_merge.hpp",
        "include/boost/compute/algorithm/detail/serial_reduce.hpp",
        "include/boost/compute/algorithm/detail/serial_reduce_by_key.hpp",
        "include/boost/compute/algorithm/detail/serial_scan.hpp",
        "include/boost/compute/algorithm/equal.hpp",
        "include/boost/compute/algorithm/equal_range.hpp",
        "include/boost/compute/algorithm/exclusive_scan.hpp",
        "include/boost/compute/algorithm/fill.hpp",
        "include/boost/compute/algorithm/fill_n.hpp",
        "include/boost/compute/algorithm/find.hpp",
        "include/boost/compute/algorithm/find_end.hpp",
        "include/boost/compute/algorithm/find_if.hpp",
        "include/boost/compute/algorithm/find_if_not.hpp",
        "include/boost/compute/algorithm/for_each.hpp",
        "include/boost/compute/algorithm/for_each_n.hpp",
        "include/boost/compute/algorithm/gather.hpp",
        "include/boost/compute/algorithm/generate.hpp",
        "include/boost/compute/algorithm/generate_n.hpp",
        "include/boost/compute/algorithm/includes.hpp",
        "include/boost/compute/algorithm/inclusive_scan.hpp",
        "include/boost/compute/algorithm/inner_product.hpp",
        "include/boost/compute/algorithm/inplace_merge.hpp",
        "include/boost/compute/algorithm/iota.hpp",
        "include/boost/compute/algorithm/is_partitioned.hpp",
        "include/boost/compute/algorithm/is_permutation.hpp",
        "include/boost/compute/algorithm/is_sorted.hpp",
        "include/boost/compute/algorithm/lexicographical_compare.hpp",
        "include/boost/compute/algorithm/lower_bound.hpp",
        "include/boost/compute/algorithm/max_element.hpp",
        "include/boost/compute/algorithm/merge.hpp",
        "include/boost/compute/algorithm/min_element.hpp",
        "include/boost/compute/algorithm/minmax_element.hpp",
        "include/boost/compute/algorithm/mismatch.hpp",
        "include/boost/compute/algorithm/next_permutation.hpp",
        "include/boost/compute/algorithm/none_of.hpp",
        "include/boost/compute/algorithm/nth_element.hpp",
        "include/boost/compute/algorithm/partial_sum.hpp",
        "include/boost/compute/algorithm/partition.hpp",
        "include/boost/compute/algorithm/partition_copy.hpp",
        "include/boost/compute/algorithm/partition_point.hpp",
        "include/boost/compute/algorithm/prev_permutation.hpp",
        "include/boost/compute/algorithm/random_shuffle.hpp",
        "include/boost/compute/algorithm/reduce.hpp",
        "include/boost/compute/algorithm/reduce_by_key.hpp",
        "include/boost/compute/algorithm/remove.hpp",
        "include/boost/compute/algorithm/remove_if.hpp",
        "include/boost/compute/algorithm/replace.hpp",
        "include/boost/compute/algorithm/replace_copy.hpp",
        "include/boost/compute/algorithm/reverse.hpp",
        "include/boost/compute/algorithm/reverse_copy.hpp",
        "include/boost/compute/algorithm/rotate.hpp",
        "include/boost/compute/algorithm/rotate_copy.hpp",
        "include/boost/compute/algorithm/scatter.hpp",
        "include/boost/compute/algorithm/scatter_if.hpp",
        "include/boost/compute/algorithm/search.hpp",
        "include/boost/compute/algorithm/search_n.hpp",
        "include/boost/compute/algorithm/set_difference.hpp",
        "include/boost/compute/algorithm/set_intersection.hpp",
        "include/boost/compute/algorithm/set_symmetric_difference.hpp",
        "include/boost/compute/algorithm/set_union.hpp",
        "include/boost/compute/algorithm/sort.hpp",
        "include/boost/compute/algorithm/sort_by_key.hpp",
        "include/boost/compute/algorithm/stable_partition.hpp",
        "include/boost/compute/algorithm/stable_sort.hpp",
        "include/boost/compute/algorithm/stable_sort_by_key.hpp",
        "include/boost/compute/algorithm/swap_ranges.hpp",
        "include/boost/compute/algorithm/transform.hpp",
        "include/boost/compute/algorithm/transform_if.hpp",
        "include/boost/compute/algorithm/transform_reduce.hpp",
        "include/boost/compute/algorithm/unique.hpp",
        "include/boost/compute/algorithm/unique_copy.hpp",
        "include/boost/compute/algorithm/upper_bound.hpp",
        "include/boost/compute/allocator.hpp",
        "include/boost/compute/allocator/buffer_allocator.hpp",
        "include/boost/compute/allocator/pinned_allocator.hpp",
        "include/boost/compute/async.hpp",
        "include/boost/compute/async/future.hpp",
        "include/boost/compute/async/wait.hpp",
        "include/boost/compute/async/wait_guard.hpp",
        "include/boost/compute/buffer.hpp",
        "include/boost/compute/cl.hpp",
        "include/boost/compute/cl_ext.hpp",
        "include/boost/compute/closure.hpp",
        "include/boost/compute/command_queue.hpp",
        "include/boost/compute/config.hpp",
        "include/boost/compute/container.hpp",
        "include/boost/compute/container/array.hpp",
        "include/boost/compute/container/basic_string.hpp",
        "include/boost/compute/container/detail/scalar.hpp",
        "include/boost/compute/container/dynamic_bitset.hpp",
        "include/boost/compute/container/flat_map.hpp",
        "include/boost/compute/container/flat_set.hpp",
        "include/boost/compute/container/mapped_view.hpp",
        "include/boost/compute/container/stack.hpp",
        "include/boost/compute/container/string.hpp",
        "include/boost/compute/container/valarray.hpp",
        "include/boost/compute/container/vector.hpp",
        "include/boost/compute/context.hpp",
        "include/boost/compute/core.hpp",
        "include/boost/compute/detail/assert_cl_success.hpp",
        "include/boost/compute/detail/buffer_value.hpp",
        "include/boost/compute/detail/device_ptr.hpp",
        "include/boost/compute/detail/diagnostic.hpp",
        "include/boost/compute/detail/duration.hpp",
        "include/boost/compute/detail/get_object_info.hpp",
        "include/boost/compute/detail/getenv.hpp",
        "include/boost/compute/detail/global_static.hpp",
        "include/boost/compute/detail/is_buffer_iterator.hpp",
        "include/boost/compute/detail/is_contiguous_iterator.hpp",
        "include/boost/compute/detail/iterator_plus_distance.hpp",
        "include/boost/compute/detail/iterator_range_size.hpp",
        "include/boost/compute/detail/iterator_traits.hpp",
        "include/boost/compute/detail/literal.hpp",
        "include/boost/compute/detail/lru_cache.hpp",
        "include/boost/compute/detail/meta_kernel.hpp",
        "include/boost/compute/detail/mpl_vector_to_tuple.hpp",
        "include/boost/compute/detail/nvidia_compute_capability.hpp",
        "include/boost/compute/detail/parameter_cache.hpp",
        "include/boost/compute/detail/path.hpp",
        "include/boost/compute/detail/print_range.hpp",
        "include/boost/compute/detail/read_write_single_value.hpp",
        "include/boost/compute/detail/sha1.hpp",
        "include/boost/compute/detail/variadic_macros.hpp",
        "include/boost/compute/detail/vendor.hpp",
        "include/boost/compute/detail/work_size.hpp",
        "include/boost/compute/device.hpp",
        "include/boost/compute/event.hpp",
        "include/boost/compute/exception.hpp",
        "include/boost/compute/exception/context_error.hpp",
        "include/boost/compute/exception/no_device_found.hpp",
        "include/boost/compute/exception/opencl_error.hpp",
        "include/boost/compute/exception/unsupported_extension_error.hpp",
        "include/boost/compute/experimental/clamp_range.hpp",
        "include/boost/compute/experimental/malloc.hpp",
        "include/boost/compute/experimental/sort_by_transform.hpp",
        "include/boost/compute/experimental/tabulate.hpp",
        "include/boost/compute/function.hpp",
        "include/boost/compute/functional.hpp",
        "include/boost/compute/functional/as.hpp",
        "include/boost/compute/functional/atomic.hpp",
        "include/boost/compute/functional/bind.hpp",
        "include/boost/compute/functional/common.hpp",
        "include/boost/compute/functional/convert.hpp",
        "include/boost/compute/functional/detail/macros.hpp",
        "include/boost/compute/functional/detail/nvidia_ballot.hpp",
        "include/boost/compute/functional/detail/nvidia_popcount.hpp",
        "include/boost/compute/functional/detail/unpack.hpp",
        "include/boost/compute/functional/field.hpp",
        "include/boost/compute/functional/geometry.hpp",
        "include/boost/compute/functional/get.hpp",
        "include/boost/compute/functional/hash.hpp",
        "include/boost/compute/functional/identity.hpp",
        "include/boost/compute/functional/integer.hpp",
        "include/boost/compute/functional/logical.hpp",
        "include/boost/compute/functional/math.hpp",
        "include/boost/compute/functional/operator.hpp",
        "include/boost/compute/functional/popcount.hpp",
        "include/boost/compute/functional/relational.hpp",
        "include/boost/compute/image.hpp",
        "include/boost/compute/image/image1d.hpp",
        "include/boost/compute/image/image2d.hpp",
        "include/boost/compute/image/image3d.hpp",
        "include/boost/compute/image/image_format.hpp",
        "include/boost/compute/image/image_object.hpp",
        "include/boost/compute/image/image_sampler.hpp",
        "include/boost/compute/image2d.hpp",
        "include/boost/compute/image3d.hpp",
        "include/boost/compute/image_format.hpp",
        "include/boost/compute/image_sampler.hpp",
        "include/boost/compute/interop/eigen.hpp",
        "include/boost/compute/interop/eigen/core.hpp",
        "include/boost/compute/interop/opencv.hpp",
        "include/boost/compute/interop/opencv/core.hpp",
        "include/boost/compute/interop/opencv/highgui.hpp",
        "include/boost/compute/interop/opencv/ocl.hpp",
        "include/boost/compute/interop/opengl.hpp",
        "include/boost/compute/interop/opengl/acquire.hpp",
        "include/boost/compute/interop/opengl/cl_gl.hpp",
        "include/boost/compute/interop/opengl/cl_gl_ext.hpp",
        "include/boost/compute/interop/opengl/context.hpp",
        "include/boost/compute/interop/opengl/gl.hpp",
        "include/boost/compute/interop/opengl/opengl_buffer.hpp",
        "include/boost/compute/interop/opengl/opengl_renderbuffer.hpp",
        "include/boost/compute/interop/opengl/opengl_texture.hpp",
        "include/boost/compute/interop/qt.hpp",
        "include/boost/compute/interop/qt/qimage.hpp",
        "include/boost/compute/interop/qt/qpoint.hpp",
        "include/boost/compute/interop/qt/qpointf.hpp",
        "include/boost/compute/interop/qt/qtcore.hpp",
        "include/boost/compute/interop/qt/qtgui.hpp",
        "include/boost/compute/interop/qt/qvector.hpp",
        "include/boost/compute/interop/vtk.hpp",
        "include/boost/compute/interop/vtk/bounds.hpp",
        "include/boost/compute/interop/vtk/data_array.hpp",
        "include/boost/compute/interop/vtk/matrix4x4.hpp",
        "include/boost/compute/interop/vtk/points.hpp",
        "include/boost/compute/iterator.hpp",
        "include/boost/compute/iterator/buffer_iterator.hpp",
        "include/boost/compute/iterator/constant_buffer_iterator.hpp",
        "include/boost/compute/iterator/constant_iterator.hpp",
        "include/boost/compute/iterator/counting_iterator.hpp",
        "include/boost/compute/iterator/detail/get_base_iterator_buffer.hpp",
        "include/boost/compute/iterator/detail/swizzle_iterator.hpp",
        "include/boost/compute/iterator/discard_iterator.hpp",
        "include/boost/compute/iterator/function_input_iterator.hpp",
        "include/boost/compute/iterator/permutation_iterator.hpp",
        "include/boost/compute/iterator/strided_iterator.hpp",
        "include/boost/compute/iterator/transform_iterator.hpp",
        "include/boost/compute/iterator/zip_iterator.hpp",
        "include/boost/compute/kernel.hpp",
        "include/boost/compute/lambda.hpp",
        "include/boost/compute/lambda/context.hpp",
        "include/boost/compute/lambda/functional.hpp",
        "include/boost/compute/lambda/get.hpp",
        "include/boost/compute/lambda/make_pair.hpp",
        "include/boost/compute/lambda/make_tuple.hpp",
        "include/boost/compute/lambda/placeholder.hpp",
        "include/boost/compute/lambda/placeholders.hpp",
        "include/boost/compute/lambda/result_of.hpp",
        "include/boost/compute/memory.hpp",
        "include/boost/compute/memory/local_buffer.hpp",
        "include/boost/compute/memory/svm_ptr.hpp",
        "include/boost/compute/memory_object.hpp",
        "include/boost/compute/pipe.hpp",
        "include/boost/compute/platform.hpp",
        "include/boost/compute/program.hpp",
        "include/boost/compute/random.hpp",
        "include/boost/compute/random/bernoulli_distribution.hpp",
        "include/boost/compute/random/default_random_engine.hpp",
        "include/boost/compute/random/discrete_distribution.hpp",
        "include/boost/compute/random/linear_congruential_engine.hpp",
        "include/boost/compute/random/mersenne_twister_engine.hpp",
        "include/boost/compute/random/normal_distribution.hpp",
        "include/boost/compute/random/threefry_engine.hpp",
        "include/boost/compute/random/uniform_int_distribution.hpp",
        "include/boost/compute/random/uniform_real_distribution.hpp",
        "include/boost/compute/source.hpp",
        "include/boost/compute/svm.hpp",
        "include/boost/compute/system.hpp",
        "include/boost/compute/type_traits.hpp",
        "include/boost/compute/type_traits/common_type.hpp",
        "include/boost/compute/type_traits/detail/capture_traits.hpp",
        "include/boost/compute/type_traits/is_device_iterator.hpp",
        "include/boost/compute/type_traits/is_fundamental.hpp",
        "include/boost/compute/type_traits/is_vector_type.hpp",
        "include/boost/compute/type_traits/make_vector_type.hpp",
        "include/boost/compute/type_traits/result_of.hpp",
        "include/boost/compute/type_traits/scalar_type.hpp",
        "include/boost/compute/type_traits/type_definition.hpp",
        "include/boost/compute/type_traits/type_name.hpp",
        "include/boost/compute/type_traits/vector_size.hpp",
        "include/boost/compute/types.hpp",
        "include/boost/compute/types/builtin.hpp",
        "include/boost/compute/types/complex.hpp",
        "include/boost/compute/types/fundamental.hpp",
        "include/boost/compute/types/pair.hpp",
        "include/boost/compute/types/struct.hpp",
        "include/boost/compute/types/tuple.hpp",
        "include/boost/compute/user_event.hpp",
        "include/boost/compute/utility.hpp",
        "include/boost/compute/utility/dim.hpp",
        "include/boost/compute/utility/extents.hpp",
        "include/boost/compute/utility/invoke.hpp",
        "include/boost/compute/utility/program_cache.hpp",
        "include/boost/compute/utility/source.hpp",
        "include/boost/compute/utility/wait_list.hpp",
        "include/boost/compute/version.hpp",
        "include/boost/compute/wait_list.hpp",
    ],
    includes = [
        "include",
    ],
)

cc_library(
    name = "compute",
    srcs = [],
    hdrs = [
        "include/boost/compute.hpp",
        "include/boost/compute/algorithm.hpp",
        "include/boost/compute/algorithm/accumulate.hpp",
        "include/boost/compute/algorithm/adjacent_difference.hpp",
        "include/boost/compute/algorithm/adjacent_find.hpp",
        "include/boost/compute/algorithm/all_of.hpp",
        "include/boost/compute/algorithm/any_of.hpp",
        "include/boost/compute/algorithm/binary_search.hpp",
        "include/boost/compute/algorithm/copy.hpp",
        "include/boost/compute/algorithm/copy_if.hpp",
        "include/boost/compute/algorithm/copy_n.hpp",
        "include/boost/compute/algorithm/count.hpp",
        "include/boost/compute/algorithm/count_if.hpp",
        "include/boost/compute/algorithm/detail/balanced_path.hpp",
        "include/boost/compute/algorithm/detail/binary_find.hpp",
        "include/boost/compute/algorithm/detail/compact.hpp",
        "include/boost/compute/algorithm/detail/copy_on_device.hpp",
        "include/boost/compute/algorithm/detail/copy_to_device.hpp",
        "include/boost/compute/algorithm/detail/copy_to_host.hpp",
        "include/boost/compute/algorithm/detail/count_if_with_ballot.hpp",
        "include/boost/compute/algorithm/detail/count_if_with_reduce.hpp",
        "include/boost/compute/algorithm/detail/count_if_with_threads.hpp",
        "include/boost/compute/algorithm/detail/find_extrema.hpp",
        "include/boost/compute/algorithm/detail/find_extrema_on_cpu.hpp",
        "include/boost/compute/algorithm/detail/find_extrema_with_atomics.hpp",
        "include/boost/compute/algorithm/detail/find_extrema_with_reduce.hpp",
        "include/boost/compute/algorithm/detail/find_if_with_atomics.hpp",
        "include/boost/compute/algorithm/detail/inplace_reduce.hpp",
        "include/boost/compute/algorithm/detail/insertion_sort.hpp",
        "include/boost/compute/algorithm/detail/merge_path.hpp",
        "include/boost/compute/algorithm/detail/merge_sort_on_cpu.hpp",
        "include/boost/compute/algorithm/detail/merge_sort_on_gpu.hpp",
        "include/boost/compute/algorithm/detail/merge_with_merge_path.hpp",
        "include/boost/compute/algorithm/detail/radix_sort.hpp",
        "include/boost/compute/algorithm/detail/random_fill.hpp",
        "include/boost/compute/algorithm/detail/reduce_by_key.hpp",
        "include/boost/compute/algorithm/detail/reduce_by_key_with_scan.hpp",
        "include/boost/compute/algorithm/detail/reduce_on_cpu.hpp",
        "include/boost/compute/algorithm/detail/reduce_on_gpu.hpp",
        "include/boost/compute/algorithm/detail/scan.hpp",
        "include/boost/compute/algorithm/detail/scan_on_cpu.hpp",
        "include/boost/compute/algorithm/detail/scan_on_gpu.hpp",
        "include/boost/compute/algorithm/detail/search_all.hpp",
        "include/boost/compute/algorithm/detail/serial_accumulate.hpp",
        "include/boost/compute/algorithm/detail/serial_count_if.hpp",
        "include/boost/compute/algorithm/detail/serial_find_extrema.hpp",
        "include/boost/compute/algorithm/detail/serial_merge.hpp",
        "include/boost/compute/algorithm/detail/serial_reduce.hpp",
        "include/boost/compute/algorithm/detail/serial_reduce_by_key.hpp",
        "include/boost/compute/algorithm/detail/serial_scan.hpp",
        "include/boost/compute/algorithm/equal.hpp",
        "include/boost/compute/algorithm/equal_range.hpp",
        "include/boost/compute/algorithm/exclusive_scan.hpp",
        "include/boost/compute/algorithm/fill.hpp",
        "include/boost/compute/algorithm/fill_n.hpp",
        "include/boost/compute/algorithm/find.hpp",
        "include/boost/compute/algorithm/find_end.hpp",
        "include/boost/compute/algorithm/find_if.hpp",
        "include/boost/compute/algorithm/find_if_not.hpp",
        "include/boost/compute/algorithm/for_each.hpp",
        "include/boost/compute/algorithm/for_each_n.hpp",
        "include/boost/compute/algorithm/gather.hpp",
        "include/boost/compute/algorithm/generate.hpp",
        "include/boost/compute/algorithm/generate_n.hpp",
        "include/boost/compute/algorithm/includes.hpp",
        "include/boost/compute/algorithm/inclusive_scan.hpp",
        "include/boost/compute/algorithm/inner_product.hpp",
        "include/boost/compute/algorithm/inplace_merge.hpp",
        "include/boost/compute/algorithm/iota.hpp",
        "include/boost/compute/algorithm/is_partitioned.hpp",
        "include/boost/compute/algorithm/is_permutation.hpp",
        "include/boost/compute/algorithm/is_sorted.hpp",
        "include/boost/compute/algorithm/lexicographical_compare.hpp",
        "include/boost/compute/algorithm/lower_bound.hpp",
        "include/boost/compute/algorithm/max_element.hpp",
        "include/boost/compute/algorithm/merge.hpp",
        "include/boost/compute/algorithm/min_element.hpp",
        "include/boost/compute/algorithm/minmax_element.hpp",
        "include/boost/compute/algorithm/mismatch.hpp",
        "include/boost/compute/algorithm/next_permutation.hpp",
        "include/boost/compute/algorithm/none_of.hpp",
        "include/boost/compute/algorithm/nth_element.hpp",
        "include/boost/compute/algorithm/partial_sum.hpp",
        "include/boost/compute/algorithm/partition.hpp",
        "include/boost/compute/algorithm/partition_copy.hpp",
        "include/boost/compute/algorithm/partition_point.hpp",
        "include/boost/compute/algorithm/prev_permutation.hpp",
        "include/boost/compute/algorithm/random_shuffle.hpp",
        "include/boost/compute/algorithm/reduce.hpp",
        "include/boost/compute/algorithm/reduce_by_key.hpp",
        "include/boost/compute/algorithm/remove.hpp",
        "include/boost/compute/algorithm/remove_if.hpp",
        "include/boost/compute/algorithm/replace.hpp",
        "include/boost/compute/algorithm/replace_copy.hpp",
        "include/boost/compute/algorithm/reverse.hpp",
        "include/boost/compute/algorithm/reverse_copy.hpp",
        "include/boost/compute/algorithm/rotate.hpp",
        "include/boost/compute/algorithm/rotate_copy.hpp",
        "include/boost/compute/algorithm/scatter.hpp",
        "include/boost/compute/algorithm/scatter_if.hpp",
        "include/boost/compute/algorithm/search.hpp",
        "include/boost/compute/algorithm/search_n.hpp",
        "include/boost/compute/algorithm/set_difference.hpp",
        "include/boost/compute/algorithm/set_intersection.hpp",
        "include/boost/compute/algorithm/set_symmetric_difference.hpp",
        "include/boost/compute/algorithm/set_union.hpp",
        "include/boost/compute/algorithm/sort.hpp",
        "include/boost/compute/algorithm/sort_by_key.hpp",
        "include/boost/compute/algorithm/stable_partition.hpp",
        "include/boost/compute/algorithm/stable_sort.hpp",
        "include/boost/compute/algorithm/stable_sort_by_key.hpp",
        "include/boost/compute/algorithm/swap_ranges.hpp",
        "include/boost/compute/algorithm/transform.hpp",
        "include/boost/compute/algorithm/transform_if.hpp",
        "include/boost/compute/algorithm/transform_reduce.hpp",
        "include/boost/compute/algorithm/unique.hpp",
        "include/boost/compute/algorithm/unique_copy.hpp",
        "include/boost/compute/algorithm/upper_bound.hpp",
        "include/boost/compute/allocator.hpp",
        "include/boost/compute/allocator/buffer_allocator.hpp",
        "include/boost/compute/allocator/pinned_allocator.hpp",
        "include/boost/compute/async.hpp",
        "include/boost/compute/async/future.hpp",
        "include/boost/compute/async/wait.hpp",
        "include/boost/compute/async/wait_guard.hpp",
        "include/boost/compute/buffer.hpp",
        "include/boost/compute/cl.hpp",
        "include/boost/compute/cl_ext.hpp",
        "include/boost/compute/closure.hpp",
        "include/boost/compute/command_queue.hpp",
        "include/boost/compute/config.hpp",
        "include/boost/compute/container.hpp",
        "include/boost/compute/container/array.hpp",
        "include/boost/compute/container/basic_string.hpp",
        "include/boost/compute/container/detail/scalar.hpp",
        "include/boost/compute/container/dynamic_bitset.hpp",
        "include/boost/compute/container/flat_map.hpp",
        "include/boost/compute/container/flat_set.hpp",
        "include/boost/compute/container/mapped_view.hpp",
        "include/boost/compute/container/stack.hpp",
        "include/boost/compute/container/string.hpp",
        "include/boost/compute/container/valarray.hpp",
        "include/boost/compute/container/vector.hpp",
        "include/boost/compute/context.hpp",
        "include/boost/compute/core.hpp",
        "include/boost/compute/detail/assert_cl_success.hpp",
        "include/boost/compute/detail/buffer_value.hpp",
        "include/boost/compute/detail/device_ptr.hpp",
        "include/boost/compute/detail/diagnostic.hpp",
        "include/boost/compute/detail/duration.hpp",
        "include/boost/compute/detail/get_object_info.hpp",
        "include/boost/compute/detail/getenv.hpp",
        "include/boost/compute/detail/global_static.hpp",
        "include/boost/compute/detail/is_buffer_iterator.hpp",
        "include/boost/compute/detail/is_contiguous_iterator.hpp",
        "include/boost/compute/detail/iterator_plus_distance.hpp",
        "include/boost/compute/detail/iterator_range_size.hpp",
        "include/boost/compute/detail/iterator_traits.hpp",
        "include/boost/compute/detail/literal.hpp",
        "include/boost/compute/detail/lru_cache.hpp",
        "include/boost/compute/detail/meta_kernel.hpp",
        "include/boost/compute/detail/mpl_vector_to_tuple.hpp",
        "include/boost/compute/detail/nvidia_compute_capability.hpp",
        "include/boost/compute/detail/parameter_cache.hpp",
        "include/boost/compute/detail/path.hpp",
        "include/boost/compute/detail/print_range.hpp",
        "include/boost/compute/detail/read_write_single_value.hpp",
        "include/boost/compute/detail/sha1.hpp",
        "include/boost/compute/detail/variadic_macros.hpp",
        "include/boost/compute/detail/vendor.hpp",
        "include/boost/compute/detail/work_size.hpp",
        "include/boost/compute/device.hpp",
        "include/boost/compute/event.hpp",
        "include/boost/compute/exception.hpp",
        "include/boost/compute/exception/context_error.hpp",
        "include/boost/compute/exception/no_device_found.hpp",
        "include/boost/compute/exception/opencl_error.hpp",
        "include/boost/compute/exception/unsupported_extension_error.hpp",
        "include/boost/compute/experimental/clamp_range.hpp",
        "include/boost/compute/experimental/malloc.hpp",
        "include/boost/compute/experimental/sort_by_transform.hpp",
        "include/boost/compute/experimental/tabulate.hpp",
        "include/boost/compute/function.hpp",
        "include/boost/compute/functional.hpp",
        "include/boost/compute/functional/as.hpp",
        "include/boost/compute/functional/atomic.hpp",
        "include/boost/compute/functional/bind.hpp",
        "include/boost/compute/functional/common.hpp",
        "include/boost/compute/functional/convert.hpp",
        "include/boost/compute/functional/detail/macros.hpp",
        "include/boost/compute/functional/detail/nvidia_ballot.hpp",
        "include/boost/compute/functional/detail/nvidia_popcount.hpp",
        "include/boost/compute/functional/detail/unpack.hpp",
        "include/boost/compute/functional/field.hpp",
        "include/boost/compute/functional/geometry.hpp",
        "include/boost/compute/functional/get.hpp",
        "include/boost/compute/functional/hash.hpp",
        "include/boost/compute/functional/identity.hpp",
        "include/boost/compute/functional/integer.hpp",
        "include/boost/compute/functional/logical.hpp",
        "include/boost/compute/functional/math.hpp",
        "include/boost/compute/functional/operator.hpp",
        "include/boost/compute/functional/popcount.hpp",
        "include/boost/compute/functional/relational.hpp",
        "include/boost/compute/image.hpp",
        "include/boost/compute/image/image1d.hpp",
        "include/boost/compute/image/image2d.hpp",
        "include/boost/compute/image/image3d.hpp",
        "include/boost/compute/image/image_format.hpp",
        "include/boost/compute/image/image_object.hpp",
        "include/boost/compute/image/image_sampler.hpp",
        "include/boost/compute/image2d.hpp",
        "include/boost/compute/image3d.hpp",
        "include/boost/compute/image_format.hpp",
        "include/boost/compute/image_sampler.hpp",
        "include/boost/compute/interop/eigen.hpp",
        "include/boost/compute/interop/eigen/core.hpp",
        "include/boost/compute/interop/opencv.hpp",
        "include/boost/compute/interop/opencv/core.hpp",
        "include/boost/compute/interop/opencv/highgui.hpp",
        "include/boost/compute/interop/opencv/ocl.hpp",
        "include/boost/compute/interop/opengl.hpp",
        "include/boost/compute/interop/opengl/acquire.hpp",
        "include/boost/compute/interop/opengl/cl_gl.hpp",
        "include/boost/compute/interop/opengl/cl_gl_ext.hpp",
        "include/boost/compute/interop/opengl/context.hpp",
        "include/boost/compute/interop/opengl/gl.hpp",
        "include/boost/compute/interop/opengl/opengl_buffer.hpp",
        "include/boost/compute/interop/opengl/opengl_renderbuffer.hpp",
        "include/boost/compute/interop/opengl/opengl_texture.hpp",
        "include/boost/compute/interop/qt.hpp",
        "include/boost/compute/interop/qt/qimage.hpp",
        "include/boost/compute/interop/qt/qpoint.hpp",
        "include/boost/compute/interop/qt/qpointf.hpp",
        "include/boost/compute/interop/qt/qtcore.hpp",
        "include/boost/compute/interop/qt/qtgui.hpp",
        "include/boost/compute/interop/qt/qvector.hpp",
        "include/boost/compute/interop/vtk.hpp",
        "include/boost/compute/interop/vtk/bounds.hpp",
        "include/boost/compute/interop/vtk/data_array.hpp",
        "include/boost/compute/interop/vtk/matrix4x4.hpp",
        "include/boost/compute/interop/vtk/points.hpp",
        "include/boost/compute/iterator.hpp",
        "include/boost/compute/iterator/buffer_iterator.hpp",
        "include/boost/compute/iterator/constant_buffer_iterator.hpp",
        "include/boost/compute/iterator/constant_iterator.hpp",
        "include/boost/compute/iterator/counting_iterator.hpp",
        "include/boost/compute/iterator/detail/get_base_iterator_buffer.hpp",
        "include/boost/compute/iterator/detail/swizzle_iterator.hpp",
        "include/boost/compute/iterator/discard_iterator.hpp",
        "include/boost/compute/iterator/function_input_iterator.hpp",
        "include/boost/compute/iterator/permutation_iterator.hpp",
        "include/boost/compute/iterator/strided_iterator.hpp",
        "include/boost/compute/iterator/transform_iterator.hpp",
        "include/boost/compute/iterator/zip_iterator.hpp",
        "include/boost/compute/kernel.hpp",
        "include/boost/compute/lambda.hpp",
        "include/boost/compute/lambda/context.hpp",
        "include/boost/compute/lambda/functional.hpp",
        "include/boost/compute/lambda/get.hpp",
        "include/boost/compute/lambda/make_pair.hpp",
        "include/boost/compute/lambda/make_tuple.hpp",
        "include/boost/compute/lambda/placeholder.hpp",
        "include/boost/compute/lambda/placeholders.hpp",
        "include/boost/compute/lambda/result_of.hpp",
        "include/boost/compute/memory.hpp",
        "include/boost/compute/memory/local_buffer.hpp",
        "include/boost/compute/memory/svm_ptr.hpp",
        "include/boost/compute/memory_object.hpp",
        "include/boost/compute/pipe.hpp",
        "include/boost/compute/platform.hpp",
        "include/boost/compute/program.hpp",
        "include/boost/compute/random.hpp",
        "include/boost/compute/random/bernoulli_distribution.hpp",
        "include/boost/compute/random/default_random_engine.hpp",
        "include/boost/compute/random/discrete_distribution.hpp",
        "include/boost/compute/random/linear_congruential_engine.hpp",
        "include/boost/compute/random/mersenne_twister_engine.hpp",
        "include/boost/compute/random/normal_distribution.hpp",
        "include/boost/compute/random/threefry_engine.hpp",
        "include/boost/compute/random/uniform_int_distribution.hpp",
        "include/boost/compute/random/uniform_real_distribution.hpp",
        "include/boost/compute/source.hpp",
        "include/boost/compute/svm.hpp",
        "include/boost/compute/system.hpp",
        "include/boost/compute/type_traits.hpp",
        "include/boost/compute/type_traits/common_type.hpp",
        "include/boost/compute/type_traits/detail/capture_traits.hpp",
        "include/boost/compute/type_traits/is_device_iterator.hpp",
        "include/boost/compute/type_traits/is_fundamental.hpp",
        "include/boost/compute/type_traits/is_vector_type.hpp",
        "include/boost/compute/type_traits/make_vector_type.hpp",
        "include/boost/compute/type_traits/result_of.hpp",
        "include/boost/compute/type_traits/scalar_type.hpp",
        "include/boost/compute/type_traits/type_definition.hpp",
        "include/boost/compute/type_traits/type_name.hpp",
        "include/boost/compute/type_traits/vector_size.hpp",
        "include/boost/compute/types.hpp",
        "include/boost/compute/types/builtin.hpp",
        "include/boost/compute/types/complex.hpp",
        "include/boost/compute/types/fundamental.hpp",
        "include/boost/compute/types/pair.hpp",
        "include/boost/compute/types/struct.hpp",
        "include/boost/compute/types/tuple.hpp",
        "include/boost/compute/user_event.hpp",
        "include/boost/compute/utility.hpp",
        "include/boost/compute/utility/dim.hpp",
        "include/boost/compute/utility/extents.hpp",
        "include/boost/compute/utility/invoke.hpp",
        "include/boost/compute/utility/program_cache.hpp",
        "include/boost/compute/utility/source.hpp",
        "include/boost/compute/utility/wait_list.hpp",
        "include/boost/compute/version.hpp",
        "include/boost/compute/wait_list.hpp",
    ],
    copts = [],
    visibility = ["//visibility:public"],
    deps = [
        ":@boost_accumulators//:accumulators",
        ":@boost_algorithm//:algorithm",
        ":@boost_align//:align",
        ":@boost_any//:any",
        ":@boost_array//:array",
        ":@boost_assert//:assert",
        ":@boost_atomic//:atomic",
        ":@boost_bind//:bind",
        ":@boost_chrono//:chrono",
        ":@boost_circular_buffer//:circular_buffer",
        ":@boost_concept_check//:concept_check",
        ":@boost_config//:config",
        ":@boost_container//:container",
        ":@boost_conversion//:conversion",
        ":@boost_core//:core",
        ":@boost_date_time//:date_time",
        ":@boost_detail//:detail",
        ":@boost_exception//:exception",
        ":@boost_filesystem//:filesystem",
        ":@boost_foreach//:foreach",
        ":@boost_format//:format",
        ":@boost_function//:function",
        ":@boost_function_types//:function_types",
        ":@boost_functional//:functional",
        ":@boost_fusion//:fusion",
        ":@boost_integer//:integer",
        ":@boost_intrusive//:intrusive",
        ":@boost_io//:io",
        ":@boost_iostreams//:iostreams",
        ":@boost_iterator//:iterator",
        ":@boost_lexical_cast//:lexical_cast",
        ":@boost_math//:math",
        ":@boost_move//:move",
        ":@boost_mpl//:mpl",
        ":@boost_multi_index//:multi_index",
        ":@boost_optional//:optional",
        ":@boost_parameter//:parameter",
        ":@boost_phoenix//:phoenix",
        ":@boost_pool//:pool",
        ":@boost_predef//:predef",
        ":@boost_preprocessor//:preprocessor",
        ":@boost_property_tree//:property_tree",
        ":@boost_proto//:proto",
        ":@boost_python//:python",
        ":@boost_random//:random",
        ":@boost_range//:range",
        ":@boost_ratio//:ratio",
        ":@boost_rational//:rational",
        ":@boost_regex//:regex",
        ":@boost_serialization//:serialization",
        ":@boost_smart_ptr//:smart_ptr",
        ":@boost_spirit//:spirit",
        ":@boost_static_assert//:static_assert",
        ":@boost_system//:system",
        ":@boost_thread//:thread",
        ":@boost_throw_exception//:throw_exception",
        ":@boost_tokenizer//:tokenizer",
        ":@boost_tuple//:tuple",
        ":@boost_type_index//:type_index",
        ":@boost_type_traits//:type_traits",
        ":@boost_typeof//:typeof",
        ":@boost_unordered//:unordered",
        ":@boost_utility//:utility",
        ":@boost_uuid//:uuid",
        ":@boost_variant//:variant",
        ":@boost_winapi//:winapi",
        ":compute_hdrs",
    ],
)
