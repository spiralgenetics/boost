package(default_visibility = ["//visibility:public"])

cc_library(
    name = "headers_only",
    hdrs = [
        "include/boost/hof.hpp",
        "include/boost/hof/alias.hpp",
        "include/boost/hof/always.hpp",
        "include/boost/hof/apply.hpp",
        "include/boost/hof/apply_eval.hpp",
        "include/boost/hof/arg.hpp",
        "include/boost/hof/capture.hpp",
        "include/boost/hof/combine.hpp",
        "include/boost/hof/compose.hpp",
        "include/boost/hof/config.hpp",
        "include/boost/hof/construct.hpp",
        "include/boost/hof/decay.hpp",
        "include/boost/hof/decorate.hpp",
        "include/boost/hof/detail/and.hpp",
        "include/boost/hof/detail/callable_base.hpp",
        "include/boost/hof/detail/can_be_called.hpp",
        "include/boost/hof/detail/compressed_pair.hpp",
        "include/boost/hof/detail/constexpr_deduce.hpp",
        "include/boost/hof/detail/delegate.hpp",
        "include/boost/hof/detail/forward.hpp",
        "include/boost/hof/detail/holder.hpp",
        "include/boost/hof/detail/intrinsics.hpp",
        "include/boost/hof/detail/join.hpp",
        "include/boost/hof/detail/make.hpp",
        "include/boost/hof/detail/move.hpp",
        "include/boost/hof/detail/noexcept.hpp",
        "include/boost/hof/detail/pp.hpp",
        "include/boost/hof/detail/recursive_constexpr_depth.hpp",
        "include/boost/hof/detail/remove_rvalue_reference.hpp",
        "include/boost/hof/detail/result_of.hpp",
        "include/boost/hof/detail/result_type.hpp",
        "include/boost/hof/detail/seq.hpp",
        "include/boost/hof/detail/static_const_var.hpp",
        "include/boost/hof/detail/unpack_tuple.hpp",
        "include/boost/hof/detail/unwrap.hpp",
        "include/boost/hof/detail/using.hpp",
        "include/boost/hof/eval.hpp",
        "include/boost/hof/first_of.hpp",
        "include/boost/hof/fix.hpp",
        "include/boost/hof/flip.hpp",
        "include/boost/hof/flow.hpp",
        "include/boost/hof/fold.hpp",
        "include/boost/hof/function.hpp",
        "include/boost/hof/function_param_limit.hpp",
        "include/boost/hof/identity.hpp",
        "include/boost/hof/if.hpp",
        "include/boost/hof/implicit.hpp",
        "include/boost/hof/indirect.hpp",
        "include/boost/hof/infix.hpp",
        "include/boost/hof/is_invocable.hpp",
        "include/boost/hof/is_unpackable.hpp",
        "include/boost/hof/lambda.hpp",
        "include/boost/hof/lazy.hpp",
        "include/boost/hof/lift.hpp",
        "include/boost/hof/limit.hpp",
        "include/boost/hof/match.hpp",
        "include/boost/hof/mutable.hpp",
        "include/boost/hof/pack.hpp",
        "include/boost/hof/partial.hpp",
        "include/boost/hof/pipable.hpp",
        "include/boost/hof/placeholders.hpp",
        "include/boost/hof/proj.hpp",
        "include/boost/hof/protect.hpp",
        "include/boost/hof/repeat.hpp",
        "include/boost/hof/repeat_while.hpp",
        "include/boost/hof/result.hpp",
        "include/boost/hof/returns.hpp",
        "include/boost/hof/reveal.hpp",
        "include/boost/hof/reverse_fold.hpp",
        "include/boost/hof/rotate.hpp",
        "include/boost/hof/static.hpp",
        "include/boost/hof/tap.hpp",
        "include/boost/hof/unpack.hpp",
        "include/boost/hof/unpack_sequence.hpp",
        "include/boost/hof/version.hpp",
    ],
    includes = [
        "include",
    ],
)

cc_library(
    name = "hof",
    srcs = [],
    hdrs = [
        "include/boost/hof.hpp",
        "include/boost/hof/alias.hpp",
        "include/boost/hof/always.hpp",
        "include/boost/hof/apply.hpp",
        "include/boost/hof/apply_eval.hpp",
        "include/boost/hof/arg.hpp",
        "include/boost/hof/capture.hpp",
        "include/boost/hof/combine.hpp",
        "include/boost/hof/compose.hpp",
        "include/boost/hof/config.hpp",
        "include/boost/hof/construct.hpp",
        "include/boost/hof/decay.hpp",
        "include/boost/hof/decorate.hpp",
        "include/boost/hof/detail/and.hpp",
        "include/boost/hof/detail/callable_base.hpp",
        "include/boost/hof/detail/can_be_called.hpp",
        "include/boost/hof/detail/compressed_pair.hpp",
        "include/boost/hof/detail/constexpr_deduce.hpp",
        "include/boost/hof/detail/delegate.hpp",
        "include/boost/hof/detail/forward.hpp",
        "include/boost/hof/detail/holder.hpp",
        "include/boost/hof/detail/intrinsics.hpp",
        "include/boost/hof/detail/join.hpp",
        "include/boost/hof/detail/make.hpp",
        "include/boost/hof/detail/move.hpp",
        "include/boost/hof/detail/noexcept.hpp",
        "include/boost/hof/detail/pp.hpp",
        "include/boost/hof/detail/recursive_constexpr_depth.hpp",
        "include/boost/hof/detail/remove_rvalue_reference.hpp",
        "include/boost/hof/detail/result_of.hpp",
        "include/boost/hof/detail/result_type.hpp",
        "include/boost/hof/detail/seq.hpp",
        "include/boost/hof/detail/static_const_var.hpp",
        "include/boost/hof/detail/unpack_tuple.hpp",
        "include/boost/hof/detail/unwrap.hpp",
        "include/boost/hof/detail/using.hpp",
        "include/boost/hof/eval.hpp",
        "include/boost/hof/first_of.hpp",
        "include/boost/hof/fix.hpp",
        "include/boost/hof/flip.hpp",
        "include/boost/hof/flow.hpp",
        "include/boost/hof/fold.hpp",
        "include/boost/hof/function.hpp",
        "include/boost/hof/function_param_limit.hpp",
        "include/boost/hof/identity.hpp",
        "include/boost/hof/if.hpp",
        "include/boost/hof/implicit.hpp",
        "include/boost/hof/indirect.hpp",
        "include/boost/hof/infix.hpp",
        "include/boost/hof/is_invocable.hpp",
        "include/boost/hof/is_unpackable.hpp",
        "include/boost/hof/lambda.hpp",
        "include/boost/hof/lazy.hpp",
        "include/boost/hof/lift.hpp",
        "include/boost/hof/limit.hpp",
        "include/boost/hof/match.hpp",
        "include/boost/hof/mutable.hpp",
        "include/boost/hof/pack.hpp",
        "include/boost/hof/partial.hpp",
        "include/boost/hof/pipable.hpp",
        "include/boost/hof/placeholders.hpp",
        "include/boost/hof/proj.hpp",
        "include/boost/hof/protect.hpp",
        "include/boost/hof/repeat.hpp",
        "include/boost/hof/repeat_while.hpp",
        "include/boost/hof/result.hpp",
        "include/boost/hof/returns.hpp",
        "include/boost/hof/reveal.hpp",
        "include/boost/hof/reverse_fold.hpp",
        "include/boost/hof/rotate.hpp",
        "include/boost/hof/static.hpp",
        "include/boost/hof/tap.hpp",
        "include/boost/hof/unpack.hpp",
        "include/boost/hof/unpack_sequence.hpp",
        "include/boost/hof/version.hpp",
    ],
    copts = [],
    deps = [
        ":headers_only",
    ],
)
