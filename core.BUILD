package(default_visibility = ["//visibility:public"])

cc_library(
    name = "headers_only",
    hdrs = [
        "include/boost/checked_delete.hpp",
        "include/boost/core/addressof.hpp",
        "include/boost/core/checked_delete.hpp",
        "include/boost/core/demangle.hpp",
        "include/boost/core/enable_if.hpp",
        "include/boost/core/exchange.hpp",
        "include/boost/core/explicit_operator_bool.hpp",
        "include/boost/core/ignore_unused.hpp",
        "include/boost/core/is_same.hpp",
        "include/boost/core/lightweight_test.hpp",
        "include/boost/core/lightweight_test_trait.hpp",
        "include/boost/core/no_exceptions_support.hpp",
        "include/boost/core/noncopyable.hpp",
        "include/boost/core/null_deleter.hpp",
        "include/boost/core/pointer_traits.hpp",
        "include/boost/core/ref.hpp",
        "include/boost/core/scoped_enum.hpp",
        "include/boost/core/swap.hpp",
        "include/boost/core/typeinfo.hpp",
        "include/boost/core/underlying_type.hpp",
        "include/boost/detail/iterator.hpp",
        "include/boost/detail/lightweight_test.hpp",
        "include/boost/detail/no_exceptions_support.hpp",
        "include/boost/detail/scoped_enum_emulation.hpp",
        "include/boost/detail/sp_typeinfo.hpp",
        "include/boost/get_pointer.hpp",
        "include/boost/iterator.hpp",
        "include/boost/non_type.hpp",
        "include/boost/noncopyable.hpp",
        "include/boost/ref.hpp",
        "include/boost/swap.hpp",
        "include/boost/type.hpp",
        "include/boost/utility/addressof.hpp",
        "include/boost/utility/enable_if.hpp",
        "include/boost/utility/explicit_operator_bool.hpp",
        "include/boost/utility/swap.hpp",
        "include/boost/visit_each.hpp",
    ],
    includes = [
        "include",
    ],
)

cc_library(
    name = "core",
    srcs = [],
    hdrs = [
        "include/boost/checked_delete.hpp",
        "include/boost/core/addressof.hpp",
        "include/boost/core/checked_delete.hpp",
        "include/boost/core/demangle.hpp",
        "include/boost/core/enable_if.hpp",
        "include/boost/core/exchange.hpp",
        "include/boost/core/explicit_operator_bool.hpp",
        "include/boost/core/ignore_unused.hpp",
        "include/boost/core/is_same.hpp",
        "include/boost/core/lightweight_test.hpp",
        "include/boost/core/lightweight_test_trait.hpp",
        "include/boost/core/no_exceptions_support.hpp",
        "include/boost/core/noncopyable.hpp",
        "include/boost/core/null_deleter.hpp",
        "include/boost/core/pointer_traits.hpp",
        "include/boost/core/ref.hpp",
        "include/boost/core/scoped_enum.hpp",
        "include/boost/core/swap.hpp",
        "include/boost/core/typeinfo.hpp",
        "include/boost/core/underlying_type.hpp",
        "include/boost/detail/iterator.hpp",
        "include/boost/detail/lightweight_test.hpp",
        "include/boost/detail/no_exceptions_support.hpp",
        "include/boost/detail/scoped_enum_emulation.hpp",
        "include/boost/detail/sp_typeinfo.hpp",
        "include/boost/get_pointer.hpp",
        "include/boost/iterator.hpp",
        "include/boost/non_type.hpp",
        "include/boost/noncopyable.hpp",
        "include/boost/ref.hpp",
        "include/boost/swap.hpp",
        "include/boost/type.hpp",
        "include/boost/utility/addressof.hpp",
        "include/boost/utility/enable_if.hpp",
        "include/boost/utility/explicit_operator_bool.hpp",
        "include/boost/utility/swap.hpp",
        "include/boost/visit_each.hpp",
    ],
    copts = [],
    deps = [
        ":headers_only",
        # Because of boost/config.hpp:
        "@boost_config//:headers_only",
        # Because of boost/assert.hpp:
        "@boost_assert//:headers_only",
    ],
)
