package(default_visibility = ["//visibility:public"])

cc_library(
    name = "headers_only",
    hdrs = [
        "include/boost/container/adaptive_pool.hpp",
        "include/boost/container/allocator.hpp",
        "include/boost/container/allocator_traits.hpp",
        "include/boost/container/container_fwd.hpp",
        "include/boost/container/deque.hpp",
        "include/boost/container/detail/adaptive_node_pool.hpp",
        "include/boost/container/detail/adaptive_node_pool_impl.hpp",
        "include/boost/container/detail/addressof.hpp",
        "include/boost/container/detail/advanced_insert_int.hpp",
        "include/boost/container/detail/algorithm.hpp",
        "include/boost/container/detail/alloc_helpers.hpp",
        "include/boost/container/detail/alloc_lib.h",
        "include/boost/container/detail/allocation_type.hpp",
        "include/boost/container/detail/allocator_version_traits.hpp",
        "include/boost/container/detail/auto_link.hpp",
        "include/boost/container/detail/block_list.hpp",
        "include/boost/container/detail/block_slist.hpp",
        "include/boost/container/detail/compare_functors.hpp",
        "include/boost/container/detail/config_begin.hpp",
        "include/boost/container/detail/config_end.hpp",
        "include/boost/container/detail/construct_in_place.hpp",
        "include/boost/container/detail/container_or_allocator_rebind.hpp",
        "include/boost/container/detail/container_rebind.hpp",
        "include/boost/container/detail/copy_move_algo.hpp",
        "include/boost/container/detail/destroyers.hpp",
        "include/boost/container/detail/dispatch_uses_allocator.hpp",
        "include/boost/container/detail/dlmalloc.hpp",
        "include/boost/container/detail/flat_tree.hpp",
        "include/boost/container/detail/function_detector.hpp",
        "include/boost/container/detail/is_container.hpp",
        "include/boost/container/detail/is_contiguous_container.hpp",
        "include/boost/container/detail/is_sorted.hpp",
        "include/boost/container/detail/iterator.hpp",
        "include/boost/container/detail/iterator_to_raw_pointer.hpp",
        "include/boost/container/detail/iterators.hpp",
        "include/boost/container/detail/math_functions.hpp",
        "include/boost/container/detail/min_max.hpp",
        "include/boost/container/detail/minimal_char_traits_header.hpp",
        "include/boost/container/detail/mpl.hpp",
        "include/boost/container/detail/multiallocation_chain.hpp",
        "include/boost/container/detail/mutex.hpp",
        "include/boost/container/detail/next_capacity.hpp",
        "include/boost/container/detail/node_alloc_holder.hpp",
        "include/boost/container/detail/node_pool.hpp",
        "include/boost/container/detail/node_pool_impl.hpp",
        "include/boost/container/detail/pair.hpp",
        "include/boost/container/detail/pair_key_mapped_of_value.hpp",
        "include/boost/container/detail/placement_new.hpp",
        "include/boost/container/detail/pool_common.hpp",
        "include/boost/container/detail/pool_common_alloc.hpp",
        "include/boost/container/detail/pool_resource.hpp",
        "include/boost/container/detail/singleton.hpp",
        "include/boost/container/detail/std_fwd.hpp",
        "include/boost/container/detail/thread_mutex.hpp",
        "include/boost/container/detail/transform_iterator.hpp",
        "include/boost/container/detail/tree.hpp",
        "include/boost/container/detail/type_traits.hpp",
        "include/boost/container/detail/value_functors.hpp",
        "include/boost/container/detail/value_init.hpp",
        "include/boost/container/detail/variadic_templates_tools.hpp",
        "include/boost/container/detail/version_type.hpp",
        "include/boost/container/detail/workaround.hpp",
        "include/boost/container/flat_map.hpp",
        "include/boost/container/flat_set.hpp",
        "include/boost/container/list.hpp",
        "include/boost/container/map.hpp",
        "include/boost/container/new_allocator.hpp",
        "include/boost/container/node_allocator.hpp",
        "include/boost/container/node_handle.hpp",
        "include/boost/container/options.hpp",
        "include/boost/container/pmr/deque.hpp",
        "include/boost/container/pmr/flat_map.hpp",
        "include/boost/container/pmr/flat_set.hpp",
        "include/boost/container/pmr/global_resource.hpp",
        "include/boost/container/pmr/list.hpp",
        "include/boost/container/pmr/map.hpp",
        "include/boost/container/pmr/memory_resource.hpp",
        "include/boost/container/pmr/monotonic_buffer_resource.hpp",
        "include/boost/container/pmr/polymorphic_allocator.hpp",
        "include/boost/container/pmr/pool_options.hpp",
        "include/boost/container/pmr/resource_adaptor.hpp",
        "include/boost/container/pmr/set.hpp",
        "include/boost/container/pmr/slist.hpp",
        "include/boost/container/pmr/small_vector.hpp",
        "include/boost/container/pmr/stable_vector.hpp",
        "include/boost/container/pmr/string.hpp",
        "include/boost/container/pmr/synchronized_pool_resource.hpp",
        "include/boost/container/pmr/unsynchronized_pool_resource.hpp",
        "include/boost/container/pmr/vector.hpp",
        "include/boost/container/scoped_allocator.hpp",
        "include/boost/container/scoped_allocator_fwd.hpp",
        "include/boost/container/set.hpp",
        "include/boost/container/slist.hpp",
        "include/boost/container/small_vector.hpp",
        "include/boost/container/stable_vector.hpp",
        "include/boost/container/static_vector.hpp",
        "include/boost/container/string.hpp",
        "include/boost/container/throw_exception.hpp",
        "include/boost/container/uses_allocator.hpp",
        "include/boost/container/uses_allocator_fwd.hpp",
        "include/boost/container/vector.hpp",
    ],
    includes = [
        "include",
    ],
)

cc_library(
    name = "container",
    srcs = [
        "src/alloc_lib.c",
        "src/dlmalloc.cpp",
        "src/global_resource.cpp",
        "src/monotonic_buffer_resource.cpp",
        "src/pool_resource.cpp",
        "src/synchronized_pool_resource.cpp",
        "src/unsynchronized_pool_resource.cpp",
    ],
    hdrs = [
        "include/boost/container/flat_set.hpp",
        "include/boost/container/detail/compare_functors.hpp",
        "include/boost/container/detail/copy_move_algo.hpp",
        "include/boost/container/detail/pool_resource.hpp",
        "include/boost/container/node_handle.hpp",
        "include/boost/container/pmr/unsynchronized_pool_resource.hpp",
        "include/boost/container/detail/block_slist.hpp",
        "include/boost/container/detail/container_or_allocator_rebind.hpp",
        "include/boost/container/uses_allocator_fwd.hpp",
        "include/boost/container/pmr/memory_resource.hpp",
        "include/boost/container/detail/pair.hpp",
        "include/boost/container/detail/mpl.hpp",
        "include/boost/container/detail/minimal_char_traits_header.hpp",
        "include/boost/container/string.hpp",
        "include/boost/container/detail/node_pool.hpp",
        "include/boost/container/detail/alloc_helpers.hpp",
        "include/boost/container/detail/adaptive_node_pool.hpp",
        "include/boost/container/pmr/synchronized_pool_resource.hpp",
        "include/boost/container/static_vector.hpp",
        "include/boost/container/pmr/flat_set.hpp",
        "include/boost/container/pmr/deque.hpp",
        "include/boost/container/allocator_traits.hpp",
        "include/boost/container/detail/pool_common_alloc.hpp",
        "include/boost/container/detail/is_container.hpp",
        "include/boost/container/detail/thread_mutex.hpp",
        "include/boost/container/detail/std_fwd.hpp",
        "include/boost/container/detail/math_functions.hpp",
        "include/boost/container/detail/auto_link.hpp",
        "include/boost/container/detail/allocation_type.hpp",
        "include/boost/container/detail/value_functors.hpp",
        "include/boost/container/detail/iterators.hpp",
        "include/boost/container/detail/adaptive_node_pool_impl.hpp",
        "include/boost/container/pmr/small_vector.hpp",
        "include/boost/container/detail/algorithm.hpp",
        "include/boost/container/pmr/slist.hpp",
        "include/boost/container/deque.hpp",
        "include/boost/container/vector.hpp",
        "include/boost/container/detail/config_begin.hpp",
        "include/boost/container/pmr/map.hpp",
        "include/boost/container/detail/function_detector.hpp",
        "include/boost/container/pmr/flat_map.hpp",
        "include/boost/container/detail/iterator_to_raw_pointer.hpp",
        "include/boost/container/detail/workaround.hpp",
        "include/boost/container/pmr/stable_vector.hpp",
        "include/boost/container/pmr/set.hpp",
        "include/boost/container/pmr/pool_options.hpp",
        "include/boost/container/detail/container_rebind.hpp",
        "include/boost/container/detail/block_list.hpp",
        "include/boost/container/throw_exception.hpp",
        "include/boost/container/adaptive_pool.hpp",
        "include/boost/container/detail/value_init.hpp",
        "include/boost/container/uses_allocator.hpp",
        "include/boost/container/list.hpp",
        "include/boost/container/pmr/global_resource.hpp",
        "include/boost/container/detail/pool_common.hpp",
        "include/boost/container/pmr/polymorphic_allocator.hpp",
        "include/boost/container/pmr/monotonic_buffer_resource.hpp",
        "include/boost/container/detail/config_end.hpp",
        "include/boost/container/slist.hpp",
        "include/boost/container/scoped_allocator.hpp",
        "include/boost/container/detail/multiallocation_chain.hpp",
        "include/boost/container/node_allocator.hpp",
        "include/boost/container/detail/flat_tree.hpp",
        "include/boost/container/detail/advanced_insert_int.hpp",
        "include/boost/container/detail/allocator_version_traits.hpp",
        "include/boost/container/map.hpp",
        "include/boost/container/detail/singleton.hpp",
        "include/boost/container/detail/placement_new.hpp",
        "include/boost/container/detail/dispatch_uses_allocator.hpp",
        "include/boost/container/detail/node_alloc_holder.hpp",
        "include/boost/container/detail/tree.hpp",
        "include/boost/container/detail/destroyers.hpp",
        "include/boost/container/detail/pair_key_mapped_of_value.hpp",
        "include/boost/container/detail/alloc_lib.h",
        "include/boost/container/small_vector.hpp",
        "include/boost/container/detail/construct_in_place.hpp",
        "include/boost/container/pmr/resource_adaptor.hpp",
        "include/boost/container/options.hpp",
        "include/boost/container/pmr/string.hpp",
        "include/boost/container/container_fwd.hpp",
        "include/boost/container/set.hpp",
        "include/boost/container/detail/addressof.hpp",
        "include/boost/container/detail/is_sorted.hpp",
        "include/boost/container/pmr/list.hpp",
        "include/boost/container/stable_vector.hpp",
        "include/boost/container/detail/mutex.hpp",
        "include/boost/container/pmr/vector.hpp",
        "include/boost/container/detail/iterator.hpp",
        "include/boost/container/detail/transform_iterator.hpp",
        "include/boost/container/scoped_allocator_fwd.hpp",
        "include/boost/container/allocator.hpp",
        "include/boost/container/flat_map.hpp",
        "include/boost/container/detail/variadic_templates_tools.hpp",
        "include/boost/container/new_allocator.hpp",
        "include/boost/container/detail/type_traits.hpp",
        "include/boost/container/detail/node_pool_impl.hpp",
        "include/boost/container/detail/is_contiguous_container.hpp",
        "include/boost/container/detail/dlmalloc.hpp",
        "include/boost/container/detail/version_type.hpp",
        "include/boost/container/detail/min_max.hpp",
        "include/boost/container/detail/next_capacity.hpp",
    ] + glob(["src/dlmalloc*.c"]) + [],
    copts = [
        "-I./src",
    ],
    deps = [
        ":headers_only",
        "@boost_intrusive//:intrusive",
        "@boost_core//:core",
        # Because of boost/intrusive/detail/math.hpp:
        "@boost_intrusive//:headers_only",
        # Because of boost/core/no_exceptions_support.hpp:
        "@boost_core//:headers_only",
        # Because of boost/config.hpp:
        "@boost_config//:headers_only",
        # Because of boost/move/detail/type_traits.hpp:
        "@boost_move//:headers_only",
        # Because of boost/assert.hpp:
        "@boost_assert//:headers_only",
        # Because of boost/static_assert.hpp:
        "@boost_static_assert//:headers_only",
        # Because of boost/type_traits/aligned_storage.hpp:
        "@boost_type_traits//:headers_only",
        # Because of boost/functional/hash.hpp:
        "@boost_container_hash//:headers_only",
        # Because of boost/integer/static_log2.hpp:
        "@boost_integer//:headers_only",
        # Because of boost/detail/container_fwd.hpp:
        "@boost_detail//:headers_only",
    ],
)
