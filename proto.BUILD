package(default_visibility = ["//visibility:public"])

cc_library(
    name = "headers_only",
    hdrs = [
        "include/boost/proto/args.hpp",
        "include/boost/proto/context.hpp",
        "include/boost/proto/context/callable.hpp",
        "include/boost/proto/context/default.hpp",
        "include/boost/proto/context/detail/callable_eval.hpp",
        "include/boost/proto/context/detail/default_eval.hpp",
        "include/boost/proto/context/detail/null_eval.hpp",
        "include/boost/proto/context/detail/preprocessed/callable_eval.hpp",
        "include/boost/proto/context/detail/preprocessed/default_eval.hpp",
        "include/boost/proto/context/detail/preprocessed/null_eval.hpp",
        "include/boost/proto/context/null.hpp",
        "include/boost/proto/core.hpp",
        "include/boost/proto/debug.hpp",
        "include/boost/proto/deep_copy.hpp",
        "include/boost/proto/detail/and_n.hpp",
        "include/boost/proto/detail/any.hpp",
        "include/boost/proto/detail/args.hpp",
        "include/boost/proto/detail/as_expr.hpp",
        "include/boost/proto/detail/as_lvalue.hpp",
        "include/boost/proto/detail/basic_expr.hpp",
        "include/boost/proto/detail/class_member_traits.hpp",
        "include/boost/proto/detail/decltype.hpp",
        "include/boost/proto/detail/deduce_domain.hpp",
        "include/boost/proto/detail/deduce_domain_n.hpp",
        "include/boost/proto/detail/deep_copy.hpp",
        "include/boost/proto/detail/deprecated.hpp",
        "include/boost/proto/detail/dont_care.hpp",
        "include/boost/proto/detail/expr.hpp",
        "include/boost/proto/detail/expr_funop.hpp",
        "include/boost/proto/detail/extends_funop.hpp",
        "include/boost/proto/detail/extends_funop_const.hpp",
        "include/boost/proto/detail/funop.hpp",
        "include/boost/proto/detail/generate_by_value.hpp",
        "include/boost/proto/detail/ignore_unused.hpp",
        "include/boost/proto/detail/is_noncopyable.hpp",
        "include/boost/proto/detail/lambda_matches.hpp",
        "include/boost/proto/detail/local.hpp",
        "include/boost/proto/detail/make_expr.hpp",
        "include/boost/proto/detail/make_expr_.hpp",
        "include/boost/proto/detail/make_expr_funop.hpp",
        "include/boost/proto/detail/matches_.hpp",
        "include/boost/proto/detail/memfun_funop.hpp",
        "include/boost/proto/detail/or_n.hpp",
        "include/boost/proto/detail/poly_function.hpp",
        "include/boost/proto/detail/poly_function_funop.hpp",
        "include/boost/proto/detail/poly_function_traits.hpp",
        "include/boost/proto/detail/preprocessed/and_n.hpp",
        "include/boost/proto/detail/preprocessed/args.hpp",
        "include/boost/proto/detail/preprocessed/basic_expr.hpp",
        "include/boost/proto/detail/preprocessed/class_member_traits.hpp",
        "include/boost/proto/detail/preprocessed/deduce_domain_n.hpp",
        "include/boost/proto/detail/preprocessed/deep_copy.hpp",
        "include/boost/proto/detail/preprocessed/expr.hpp",
        "include/boost/proto/detail/preprocessed/expr_variadic.hpp",
        "include/boost/proto/detail/preprocessed/extends_funop.hpp",
        "include/boost/proto/detail/preprocessed/extends_funop_const.hpp",
        "include/boost/proto/detail/preprocessed/funop.hpp",
        "include/boost/proto/detail/preprocessed/generate_by_value.hpp",
        "include/boost/proto/detail/preprocessed/lambda_matches.hpp",
        "include/boost/proto/detail/preprocessed/make_expr.hpp",
        "include/boost/proto/detail/preprocessed/make_expr_.hpp",
        "include/boost/proto/detail/preprocessed/make_expr_funop.hpp",
        "include/boost/proto/detail/preprocessed/matches_.hpp",
        "include/boost/proto/detail/preprocessed/memfun_funop.hpp",
        "include/boost/proto/detail/preprocessed/or_n.hpp",
        "include/boost/proto/detail/preprocessed/poly_function_funop.hpp",
        "include/boost/proto/detail/preprocessed/poly_function_traits.hpp",
        "include/boost/proto/detail/preprocessed/template_arity_helper.hpp",
        "include/boost/proto/detail/preprocessed/traits.hpp",
        "include/boost/proto/detail/preprocessed/unpack_expr_.hpp",
        "include/boost/proto/detail/preprocessed/vararg_matches_impl.hpp",
        "include/boost/proto/detail/remove_typename.hpp",
        "include/boost/proto/detail/static_const.hpp",
        "include/boost/proto/detail/template_arity.hpp",
        "include/boost/proto/detail/template_arity_helper.hpp",
        "include/boost/proto/detail/traits.hpp",
        "include/boost/proto/detail/unpack_expr_.hpp",
        "include/boost/proto/detail/vararg_matches_impl.hpp",
        "include/boost/proto/domain.hpp",
        "include/boost/proto/eval.hpp",
        "include/boost/proto/expr.hpp",
        "include/boost/proto/extends.hpp",
        "include/boost/proto/functional.hpp",
        "include/boost/proto/functional/fusion.hpp",
        "include/boost/proto/functional/fusion/at.hpp",
        "include/boost/proto/functional/fusion/pop_back.hpp",
        "include/boost/proto/functional/fusion/pop_front.hpp",
        "include/boost/proto/functional/fusion/push_back.hpp",
        "include/boost/proto/functional/fusion/push_front.hpp",
        "include/boost/proto/functional/fusion/reverse.hpp",
        "include/boost/proto/functional/range.hpp",
        "include/boost/proto/functional/range/begin.hpp",
        "include/boost/proto/functional/range/empty.hpp",
        "include/boost/proto/functional/range/end.hpp",
        "include/boost/proto/functional/range/rbegin.hpp",
        "include/boost/proto/functional/range/rend.hpp",
        "include/boost/proto/functional/range/size.hpp",
        "include/boost/proto/functional/std.hpp",
        "include/boost/proto/functional/std/iterator.hpp",
        "include/boost/proto/functional/std/utility.hpp",
        "include/boost/proto/fusion.hpp",
        "include/boost/proto/generate.hpp",
        "include/boost/proto/literal.hpp",
        "include/boost/proto/make_expr.hpp",
        "include/boost/proto/matches.hpp",
        "include/boost/proto/operators.hpp",
        "include/boost/proto/proto.hpp",
        "include/boost/proto/proto_fwd.hpp",
        "include/boost/proto/proto_typeof.hpp",
        "include/boost/proto/repeat.hpp",
        "include/boost/proto/tags.hpp",
        "include/boost/proto/traits.hpp",
        "include/boost/proto/transform.hpp",
        "include/boost/proto/transform/arg.hpp",
        "include/boost/proto/transform/call.hpp",
        "include/boost/proto/transform/default.hpp",
        "include/boost/proto/transform/detail/call.hpp",
        "include/boost/proto/transform/detail/construct_funop.hpp",
        "include/boost/proto/transform/detail/construct_pod_funop.hpp",
        "include/boost/proto/transform/detail/default_function_impl.hpp",
        "include/boost/proto/transform/detail/expand_pack.hpp",
        "include/boost/proto/transform/detail/fold_impl.hpp",
        "include/boost/proto/transform/detail/lazy.hpp",
        "include/boost/proto/transform/detail/make.hpp",
        "include/boost/proto/transform/detail/make_gcc_workaround.hpp",
        "include/boost/proto/transform/detail/pack.hpp",
        "include/boost/proto/transform/detail/pack_impl.hpp",
        "include/boost/proto/transform/detail/pass_through_impl.hpp",
        "include/boost/proto/transform/detail/preprocessed/call.hpp",
        "include/boost/proto/transform/detail/preprocessed/construct_funop.hpp",
        "include/boost/proto/transform/detail/preprocessed/construct_pod_funop.hpp",
        "include/boost/proto/transform/detail/preprocessed/default_function_impl.hpp",
        "include/boost/proto/transform/detail/preprocessed/expand_pack.hpp",
        "include/boost/proto/transform/detail/preprocessed/fold_impl.hpp",
        "include/boost/proto/transform/detail/preprocessed/lazy.hpp",
        "include/boost/proto/transform/detail/preprocessed/make.hpp",
        "include/boost/proto/transform/detail/preprocessed/make_gcc_workaround.hpp",
        "include/boost/proto/transform/detail/preprocessed/pack_impl.hpp",
        "include/boost/proto/transform/detail/preprocessed/pass_through_impl.hpp",
        "include/boost/proto/transform/detail/preprocessed/when.hpp",
        "include/boost/proto/transform/detail/when.hpp",
        "include/boost/proto/transform/env.hpp",
        "include/boost/proto/transform/fold.hpp",
        "include/boost/proto/transform/fold_tree.hpp",
        "include/boost/proto/transform/impl.hpp",
        "include/boost/proto/transform/integral_c.hpp",
        "include/boost/proto/transform/lazy.hpp",
        "include/boost/proto/transform/make.hpp",
        "include/boost/proto/transform/pass_through.hpp",
        "include/boost/proto/transform/when.hpp",
    ],
    includes = [
        "include",
    ],
)

cc_library(
    name = "proto",
    srcs = [],
    hdrs = [
        "include/boost/proto/args.hpp",
        "include/boost/proto/context.hpp",
        "include/boost/proto/context/callable.hpp",
        "include/boost/proto/context/default.hpp",
        "include/boost/proto/context/detail/callable_eval.hpp",
        "include/boost/proto/context/detail/default_eval.hpp",
        "include/boost/proto/context/detail/null_eval.hpp",
        "include/boost/proto/context/detail/preprocessed/callable_eval.hpp",
        "include/boost/proto/context/detail/preprocessed/default_eval.hpp",
        "include/boost/proto/context/detail/preprocessed/null_eval.hpp",
        "include/boost/proto/context/null.hpp",
        "include/boost/proto/core.hpp",
        "include/boost/proto/debug.hpp",
        "include/boost/proto/deep_copy.hpp",
        "include/boost/proto/detail/and_n.hpp",
        "include/boost/proto/detail/any.hpp",
        "include/boost/proto/detail/args.hpp",
        "include/boost/proto/detail/as_expr.hpp",
        "include/boost/proto/detail/as_lvalue.hpp",
        "include/boost/proto/detail/basic_expr.hpp",
        "include/boost/proto/detail/class_member_traits.hpp",
        "include/boost/proto/detail/decltype.hpp",
        "include/boost/proto/detail/deduce_domain.hpp",
        "include/boost/proto/detail/deduce_domain_n.hpp",
        "include/boost/proto/detail/deep_copy.hpp",
        "include/boost/proto/detail/deprecated.hpp",
        "include/boost/proto/detail/dont_care.hpp",
        "include/boost/proto/detail/expr.hpp",
        "include/boost/proto/detail/expr_funop.hpp",
        "include/boost/proto/detail/extends_funop.hpp",
        "include/boost/proto/detail/extends_funop_const.hpp",
        "include/boost/proto/detail/funop.hpp",
        "include/boost/proto/detail/generate_by_value.hpp",
        "include/boost/proto/detail/ignore_unused.hpp",
        "include/boost/proto/detail/is_noncopyable.hpp",
        "include/boost/proto/detail/lambda_matches.hpp",
        "include/boost/proto/detail/local.hpp",
        "include/boost/proto/detail/make_expr.hpp",
        "include/boost/proto/detail/make_expr_.hpp",
        "include/boost/proto/detail/make_expr_funop.hpp",
        "include/boost/proto/detail/matches_.hpp",
        "include/boost/proto/detail/memfun_funop.hpp",
        "include/boost/proto/detail/or_n.hpp",
        "include/boost/proto/detail/poly_function.hpp",
        "include/boost/proto/detail/poly_function_funop.hpp",
        "include/boost/proto/detail/poly_function_traits.hpp",
        "include/boost/proto/detail/preprocessed/and_n.hpp",
        "include/boost/proto/detail/preprocessed/args.hpp",
        "include/boost/proto/detail/preprocessed/basic_expr.hpp",
        "include/boost/proto/detail/preprocessed/class_member_traits.hpp",
        "include/boost/proto/detail/preprocessed/deduce_domain_n.hpp",
        "include/boost/proto/detail/preprocessed/deep_copy.hpp",
        "include/boost/proto/detail/preprocessed/expr.hpp",
        "include/boost/proto/detail/preprocessed/expr_variadic.hpp",
        "include/boost/proto/detail/preprocessed/extends_funop.hpp",
        "include/boost/proto/detail/preprocessed/extends_funop_const.hpp",
        "include/boost/proto/detail/preprocessed/funop.hpp",
        "include/boost/proto/detail/preprocessed/generate_by_value.hpp",
        "include/boost/proto/detail/preprocessed/lambda_matches.hpp",
        "include/boost/proto/detail/preprocessed/make_expr.hpp",
        "include/boost/proto/detail/preprocessed/make_expr_.hpp",
        "include/boost/proto/detail/preprocessed/make_expr_funop.hpp",
        "include/boost/proto/detail/preprocessed/matches_.hpp",
        "include/boost/proto/detail/preprocessed/memfun_funop.hpp",
        "include/boost/proto/detail/preprocessed/or_n.hpp",
        "include/boost/proto/detail/preprocessed/poly_function_funop.hpp",
        "include/boost/proto/detail/preprocessed/poly_function_traits.hpp",
        "include/boost/proto/detail/preprocessed/template_arity_helper.hpp",
        "include/boost/proto/detail/preprocessed/traits.hpp",
        "include/boost/proto/detail/preprocessed/unpack_expr_.hpp",
        "include/boost/proto/detail/preprocessed/vararg_matches_impl.hpp",
        "include/boost/proto/detail/remove_typename.hpp",
        "include/boost/proto/detail/static_const.hpp",
        "include/boost/proto/detail/template_arity.hpp",
        "include/boost/proto/detail/template_arity_helper.hpp",
        "include/boost/proto/detail/traits.hpp",
        "include/boost/proto/detail/unpack_expr_.hpp",
        "include/boost/proto/detail/vararg_matches_impl.hpp",
        "include/boost/proto/domain.hpp",
        "include/boost/proto/eval.hpp",
        "include/boost/proto/expr.hpp",
        "include/boost/proto/extends.hpp",
        "include/boost/proto/functional.hpp",
        "include/boost/proto/functional/fusion.hpp",
        "include/boost/proto/functional/fusion/at.hpp",
        "include/boost/proto/functional/fusion/pop_back.hpp",
        "include/boost/proto/functional/fusion/pop_front.hpp",
        "include/boost/proto/functional/fusion/push_back.hpp",
        "include/boost/proto/functional/fusion/push_front.hpp",
        "include/boost/proto/functional/fusion/reverse.hpp",
        "include/boost/proto/functional/range.hpp",
        "include/boost/proto/functional/range/begin.hpp",
        "include/boost/proto/functional/range/empty.hpp",
        "include/boost/proto/functional/range/end.hpp",
        "include/boost/proto/functional/range/rbegin.hpp",
        "include/boost/proto/functional/range/rend.hpp",
        "include/boost/proto/functional/range/size.hpp",
        "include/boost/proto/functional/std.hpp",
        "include/boost/proto/functional/std/iterator.hpp",
        "include/boost/proto/functional/std/utility.hpp",
        "include/boost/proto/fusion.hpp",
        "include/boost/proto/generate.hpp",
        "include/boost/proto/literal.hpp",
        "include/boost/proto/make_expr.hpp",
        "include/boost/proto/matches.hpp",
        "include/boost/proto/operators.hpp",
        "include/boost/proto/proto.hpp",
        "include/boost/proto/proto_fwd.hpp",
        "include/boost/proto/proto_typeof.hpp",
        "include/boost/proto/repeat.hpp",
        "include/boost/proto/tags.hpp",
        "include/boost/proto/traits.hpp",
        "include/boost/proto/transform.hpp",
        "include/boost/proto/transform/arg.hpp",
        "include/boost/proto/transform/call.hpp",
        "include/boost/proto/transform/default.hpp",
        "include/boost/proto/transform/detail/call.hpp",
        "include/boost/proto/transform/detail/construct_funop.hpp",
        "include/boost/proto/transform/detail/construct_pod_funop.hpp",
        "include/boost/proto/transform/detail/default_function_impl.hpp",
        "include/boost/proto/transform/detail/expand_pack.hpp",
        "include/boost/proto/transform/detail/fold_impl.hpp",
        "include/boost/proto/transform/detail/lazy.hpp",
        "include/boost/proto/transform/detail/make.hpp",
        "include/boost/proto/transform/detail/make_gcc_workaround.hpp",
        "include/boost/proto/transform/detail/pack.hpp",
        "include/boost/proto/transform/detail/pack_impl.hpp",
        "include/boost/proto/transform/detail/pass_through_impl.hpp",
        "include/boost/proto/transform/detail/preprocessed/call.hpp",
        "include/boost/proto/transform/detail/preprocessed/construct_funop.hpp",
        "include/boost/proto/transform/detail/preprocessed/construct_pod_funop.hpp",
        "include/boost/proto/transform/detail/preprocessed/default_function_impl.hpp",
        "include/boost/proto/transform/detail/preprocessed/expand_pack.hpp",
        "include/boost/proto/transform/detail/preprocessed/fold_impl.hpp",
        "include/boost/proto/transform/detail/preprocessed/lazy.hpp",
        "include/boost/proto/transform/detail/preprocessed/make.hpp",
        "include/boost/proto/transform/detail/preprocessed/make_gcc_workaround.hpp",
        "include/boost/proto/transform/detail/preprocessed/pack_impl.hpp",
        "include/boost/proto/transform/detail/preprocessed/pass_through_impl.hpp",
        "include/boost/proto/transform/detail/preprocessed/when.hpp",
        "include/boost/proto/transform/detail/when.hpp",
        "include/boost/proto/transform/env.hpp",
        "include/boost/proto/transform/fold.hpp",
        "include/boost/proto/transform/fold_tree.hpp",
        "include/boost/proto/transform/impl.hpp",
        "include/boost/proto/transform/integral_c.hpp",
        "include/boost/proto/transform/lazy.hpp",
        "include/boost/proto/transform/make.hpp",
        "include/boost/proto/transform/pass_through.hpp",
        "include/boost/proto/transform/when.hpp",
    ],
    copts = [],
    deps = [
        ":headers_only",
        # Because of boost/preprocessor/cat.hpp:
        "@boost_preprocessor//:headers_only",
        # Because of boost/mpl/at.hpp:
        "@boost_mpl//:headers_only",
        # Because of boost/type_traits/add_const.hpp:
        "@boost_type_traits//:headers_only",
        # Because of boost/fusion/include/push_front.hpp:
        "@boost_fusion//:headers_only",
        # Because of boost/utility/addressof.hpp:
        "@boost_core//:headers_only",
        # Because of boost/range/empty.hpp:
        "@boost_range//:headers_only",
        # Because of boost/utility/result_of.hpp:
        "@boost_utility//:headers_only",
        # Because of boost/config.hpp:
        "@boost_config//:headers_only",
        # Because of boost/typeof/typeof.hpp:
        "@boost_typeof//:headers_only",
        # Because of boost/static_assert.hpp:
        "@boost_static_assert//:headers_only",
        # Because of boost/assert.hpp:
        "@boost_assert//:headers_only",
        # Because of boost/iterator/reverse_iterator.hpp:
        "@boost_iterator//:headers_only",
        # Because of boost/concept_check.hpp:
        "@boost_concept_check//:headers_only",
        # Because of boost/detail/indirect_traits.hpp:
        "@boost_detail//:headers_only",
    ],
)
