package(default_visibility = ["//visibility:public"])

cc_library(
    name = "headers_only",
    hdrs = [
        "include/boost/range.hpp",
        "include/boost/range/adaptor/adjacent_filtered.hpp",
        "include/boost/range/adaptor/argument_fwd.hpp",
        "include/boost/range/adaptor/copied.hpp",
        "include/boost/range/adaptor/define_adaptor.hpp",
        "include/boost/range/adaptor/filtered.hpp",
        "include/boost/range/adaptor/formatted.hpp",
        "include/boost/range/adaptor/indexed.hpp",
        "include/boost/range/adaptor/indirected.hpp",
        "include/boost/range/adaptor/map.hpp",
        "include/boost/range/adaptor/ref_unwrapped.hpp",
        "include/boost/range/adaptor/replaced.hpp",
        "include/boost/range/adaptor/replaced_if.hpp",
        "include/boost/range/adaptor/reversed.hpp",
        "include/boost/range/adaptor/sliced.hpp",
        "include/boost/range/adaptor/strided.hpp",
        "include/boost/range/adaptor/tokenized.hpp",
        "include/boost/range/adaptor/transformed.hpp",
        "include/boost/range/adaptor/type_erased.hpp",
        "include/boost/range/adaptor/uniqued.hpp",
        "include/boost/range/adaptors.hpp",
        "include/boost/range/algorithm.hpp",
        "include/boost/range/algorithm/adjacent_find.hpp",
        "include/boost/range/algorithm/binary_search.hpp",
        "include/boost/range/algorithm/copy.hpp",
        "include/boost/range/algorithm/copy_backward.hpp",
        "include/boost/range/algorithm/count.hpp",
        "include/boost/range/algorithm/count_if.hpp",
        "include/boost/range/algorithm/equal.hpp",
        "include/boost/range/algorithm/equal_range.hpp",
        "include/boost/range/algorithm/fill.hpp",
        "include/boost/range/algorithm/fill_n.hpp",
        "include/boost/range/algorithm/find.hpp",
        "include/boost/range/algorithm/find_end.hpp",
        "include/boost/range/algorithm/find_first_of.hpp",
        "include/boost/range/algorithm/find_if.hpp",
        "include/boost/range/algorithm/for_each.hpp",
        "include/boost/range/algorithm/generate.hpp",
        "include/boost/range/algorithm/heap_algorithm.hpp",
        "include/boost/range/algorithm/inplace_merge.hpp",
        "include/boost/range/algorithm/lexicographical_compare.hpp",
        "include/boost/range/algorithm/lower_bound.hpp",
        "include/boost/range/algorithm/max_element.hpp",
        "include/boost/range/algorithm/merge.hpp",
        "include/boost/range/algorithm/min_element.hpp",
        "include/boost/range/algorithm/mismatch.hpp",
        "include/boost/range/algorithm/nth_element.hpp",
        "include/boost/range/algorithm/partial_sort.hpp",
        "include/boost/range/algorithm/partial_sort_copy.hpp",
        "include/boost/range/algorithm/partition.hpp",
        "include/boost/range/algorithm/permutation.hpp",
        "include/boost/range/algorithm/random_shuffle.hpp",
        "include/boost/range/algorithm/remove.hpp",
        "include/boost/range/algorithm/remove_copy.hpp",
        "include/boost/range/algorithm/remove_copy_if.hpp",
        "include/boost/range/algorithm/remove_if.hpp",
        "include/boost/range/algorithm/replace.hpp",
        "include/boost/range/algorithm/replace_copy.hpp",
        "include/boost/range/algorithm/replace_copy_if.hpp",
        "include/boost/range/algorithm/replace_if.hpp",
        "include/boost/range/algorithm/reverse.hpp",
        "include/boost/range/algorithm/reverse_copy.hpp",
        "include/boost/range/algorithm/rotate.hpp",
        "include/boost/range/algorithm/rotate_copy.hpp",
        "include/boost/range/algorithm/search.hpp",
        "include/boost/range/algorithm/search_n.hpp",
        "include/boost/range/algorithm/set_algorithm.hpp",
        "include/boost/range/algorithm/sort.hpp",
        "include/boost/range/algorithm/stable_partition.hpp",
        "include/boost/range/algorithm/stable_sort.hpp",
        "include/boost/range/algorithm/swap_ranges.hpp",
        "include/boost/range/algorithm/transform.hpp",
        "include/boost/range/algorithm/unique.hpp",
        "include/boost/range/algorithm/unique_copy.hpp",
        "include/boost/range/algorithm/upper_bound.hpp",
        "include/boost/range/algorithm_ext.hpp",
        "include/boost/range/algorithm_ext/copy_n.hpp",
        "include/boost/range/algorithm_ext/erase.hpp",
        "include/boost/range/algorithm_ext/for_each.hpp",
        "include/boost/range/algorithm_ext/insert.hpp",
        "include/boost/range/algorithm_ext/iota.hpp",
        "include/boost/range/algorithm_ext/is_sorted.hpp",
        "include/boost/range/algorithm_ext/overwrite.hpp",
        "include/boost/range/algorithm_ext/push_back.hpp",
        "include/boost/range/algorithm_ext/push_front.hpp",
        "include/boost/range/any_range.hpp",
        "include/boost/range/as_array.hpp",
        "include/boost/range/as_literal.hpp",
        "include/boost/range/atl.hpp",
        "include/boost/range/begin.hpp",
        "include/boost/range/category.hpp",
        "include/boost/range/combine.hpp",
        "include/boost/range/concepts.hpp",
        "include/boost/range/config.hpp",
        "include/boost/range/const_iterator.hpp",
        "include/boost/range/const_reverse_iterator.hpp",
        "include/boost/range/counting_range.hpp",
        "include/boost/range/detail/any_iterator.hpp",
        "include/boost/range/detail/any_iterator_buffer.hpp",
        "include/boost/range/detail/any_iterator_interface.hpp",
        "include/boost/range/detail/any_iterator_wrapper.hpp",
        "include/boost/range/detail/as_literal.hpp",
        "include/boost/range/detail/begin.hpp",
        "include/boost/range/detail/collection_traits.hpp",
        "include/boost/range/detail/collection_traits_detail.hpp",
        "include/boost/range/detail/combine_cxx03.hpp",
        "include/boost/range/detail/combine_cxx11.hpp",
        "include/boost/range/detail/combine_no_rvalue.hpp",
        "include/boost/range/detail/combine_rvalue.hpp",
        "include/boost/range/detail/common.hpp",
        "include/boost/range/detail/default_constructible_unary_fn.hpp",
        "include/boost/range/detail/demote_iterator_traversal_tag.hpp",
        "include/boost/range/detail/detail_str.hpp",
        "include/boost/range/detail/difference_type.hpp",
        "include/boost/range/detail/empty.hpp",
        "include/boost/range/detail/end.hpp",
        "include/boost/range/detail/extract_optional_type.hpp",
        "include/boost/range/detail/has_member_size.hpp",
        "include/boost/range/detail/implementation_help.hpp",
        "include/boost/range/detail/join_iterator.hpp",
        "include/boost/range/detail/microsoft.hpp",
        "include/boost/range/detail/misc_concept.hpp",
        "include/boost/range/detail/msvc_has_iterator_workaround.hpp",
        "include/boost/range/detail/range_return.hpp",
        "include/boost/range/detail/remove_extent.hpp",
        "include/boost/range/detail/safe_bool.hpp",
        "include/boost/range/detail/sfinae.hpp",
        "include/boost/range/detail/size_type.hpp",
        "include/boost/range/detail/sizer.hpp",
        "include/boost/range/detail/str_types.hpp",
        "include/boost/range/detail/value_type.hpp",
        "include/boost/range/difference_type.hpp",
        "include/boost/range/distance.hpp",
        "include/boost/range/empty.hpp",
        "include/boost/range/end.hpp",
        "include/boost/range/functions.hpp",
        "include/boost/range/has_range_iterator.hpp",
        "include/boost/range/irange.hpp",
        "include/boost/range/istream_range.hpp",
        "include/boost/range/iterator.hpp",
        "include/boost/range/iterator_range.hpp",
        "include/boost/range/iterator_range_core.hpp",
        "include/boost/range/iterator_range_hash.hpp",
        "include/boost/range/iterator_range_io.hpp",
        "include/boost/range/join.hpp",
        "include/boost/range/metafunctions.hpp",
        "include/boost/range/mfc.hpp",
        "include/boost/range/mfc_map.hpp",
        "include/boost/range/mutable_iterator.hpp",
        "include/boost/range/numeric.hpp",
        "include/boost/range/pointer.hpp",
        "include/boost/range/range_fwd.hpp",
        "include/boost/range/rbegin.hpp",
        "include/boost/range/reference.hpp",
        "include/boost/range/rend.hpp",
        "include/boost/range/result_iterator.hpp",
        "include/boost/range/reverse_iterator.hpp",
        "include/boost/range/reverse_result_iterator.hpp",
        "include/boost/range/size.hpp",
        "include/boost/range/size_type.hpp",
        "include/boost/range/sub_range.hpp",
        "include/boost/range/traversal.hpp",
        "include/boost/range/value_type.hpp",
    ],
    includes = [
        "include",
    ],
)

cc_library(
    name = "range",
    srcs = [],
    hdrs = [
        "include/boost/range.hpp",
        "include/boost/range/adaptor/adjacent_filtered.hpp",
        "include/boost/range/adaptor/argument_fwd.hpp",
        "include/boost/range/adaptor/copied.hpp",
        "include/boost/range/adaptor/define_adaptor.hpp",
        "include/boost/range/adaptor/filtered.hpp",
        "include/boost/range/adaptor/formatted.hpp",
        "include/boost/range/adaptor/indexed.hpp",
        "include/boost/range/adaptor/indirected.hpp",
        "include/boost/range/adaptor/map.hpp",
        "include/boost/range/adaptor/ref_unwrapped.hpp",
        "include/boost/range/adaptor/replaced.hpp",
        "include/boost/range/adaptor/replaced_if.hpp",
        "include/boost/range/adaptor/reversed.hpp",
        "include/boost/range/adaptor/sliced.hpp",
        "include/boost/range/adaptor/strided.hpp",
        "include/boost/range/adaptor/tokenized.hpp",
        "include/boost/range/adaptor/transformed.hpp",
        "include/boost/range/adaptor/type_erased.hpp",
        "include/boost/range/adaptor/uniqued.hpp",
        "include/boost/range/adaptors.hpp",
        "include/boost/range/algorithm.hpp",
        "include/boost/range/algorithm/adjacent_find.hpp",
        "include/boost/range/algorithm/binary_search.hpp",
        "include/boost/range/algorithm/copy.hpp",
        "include/boost/range/algorithm/copy_backward.hpp",
        "include/boost/range/algorithm/count.hpp",
        "include/boost/range/algorithm/count_if.hpp",
        "include/boost/range/algorithm/equal.hpp",
        "include/boost/range/algorithm/equal_range.hpp",
        "include/boost/range/algorithm/fill.hpp",
        "include/boost/range/algorithm/fill_n.hpp",
        "include/boost/range/algorithm/find.hpp",
        "include/boost/range/algorithm/find_end.hpp",
        "include/boost/range/algorithm/find_first_of.hpp",
        "include/boost/range/algorithm/find_if.hpp",
        "include/boost/range/algorithm/for_each.hpp",
        "include/boost/range/algorithm/generate.hpp",
        "include/boost/range/algorithm/heap_algorithm.hpp",
        "include/boost/range/algorithm/inplace_merge.hpp",
        "include/boost/range/algorithm/lexicographical_compare.hpp",
        "include/boost/range/algorithm/lower_bound.hpp",
        "include/boost/range/algorithm/max_element.hpp",
        "include/boost/range/algorithm/merge.hpp",
        "include/boost/range/algorithm/min_element.hpp",
        "include/boost/range/algorithm/mismatch.hpp",
        "include/boost/range/algorithm/nth_element.hpp",
        "include/boost/range/algorithm/partial_sort.hpp",
        "include/boost/range/algorithm/partial_sort_copy.hpp",
        "include/boost/range/algorithm/partition.hpp",
        "include/boost/range/algorithm/permutation.hpp",
        "include/boost/range/algorithm/random_shuffle.hpp",
        "include/boost/range/algorithm/remove.hpp",
        "include/boost/range/algorithm/remove_copy.hpp",
        "include/boost/range/algorithm/remove_copy_if.hpp",
        "include/boost/range/algorithm/remove_if.hpp",
        "include/boost/range/algorithm/replace.hpp",
        "include/boost/range/algorithm/replace_copy.hpp",
        "include/boost/range/algorithm/replace_copy_if.hpp",
        "include/boost/range/algorithm/replace_if.hpp",
        "include/boost/range/algorithm/reverse.hpp",
        "include/boost/range/algorithm/reverse_copy.hpp",
        "include/boost/range/algorithm/rotate.hpp",
        "include/boost/range/algorithm/rotate_copy.hpp",
        "include/boost/range/algorithm/search.hpp",
        "include/boost/range/algorithm/search_n.hpp",
        "include/boost/range/algorithm/set_algorithm.hpp",
        "include/boost/range/algorithm/sort.hpp",
        "include/boost/range/algorithm/stable_partition.hpp",
        "include/boost/range/algorithm/stable_sort.hpp",
        "include/boost/range/algorithm/swap_ranges.hpp",
        "include/boost/range/algorithm/transform.hpp",
        "include/boost/range/algorithm/unique.hpp",
        "include/boost/range/algorithm/unique_copy.hpp",
        "include/boost/range/algorithm/upper_bound.hpp",
        "include/boost/range/algorithm_ext.hpp",
        "include/boost/range/algorithm_ext/copy_n.hpp",
        "include/boost/range/algorithm_ext/erase.hpp",
        "include/boost/range/algorithm_ext/for_each.hpp",
        "include/boost/range/algorithm_ext/insert.hpp",
        "include/boost/range/algorithm_ext/iota.hpp",
        "include/boost/range/algorithm_ext/is_sorted.hpp",
        "include/boost/range/algorithm_ext/overwrite.hpp",
        "include/boost/range/algorithm_ext/push_back.hpp",
        "include/boost/range/algorithm_ext/push_front.hpp",
        "include/boost/range/any_range.hpp",
        "include/boost/range/as_array.hpp",
        "include/boost/range/as_literal.hpp",
        "include/boost/range/atl.hpp",
        "include/boost/range/begin.hpp",
        "include/boost/range/category.hpp",
        "include/boost/range/combine.hpp",
        "include/boost/range/concepts.hpp",
        "include/boost/range/config.hpp",
        "include/boost/range/const_iterator.hpp",
        "include/boost/range/const_reverse_iterator.hpp",
        "include/boost/range/counting_range.hpp",
        "include/boost/range/detail/any_iterator.hpp",
        "include/boost/range/detail/any_iterator_buffer.hpp",
        "include/boost/range/detail/any_iterator_interface.hpp",
        "include/boost/range/detail/any_iterator_wrapper.hpp",
        "include/boost/range/detail/as_literal.hpp",
        "include/boost/range/detail/begin.hpp",
        "include/boost/range/detail/collection_traits.hpp",
        "include/boost/range/detail/collection_traits_detail.hpp",
        "include/boost/range/detail/combine_cxx03.hpp",
        "include/boost/range/detail/combine_cxx11.hpp",
        "include/boost/range/detail/combine_no_rvalue.hpp",
        "include/boost/range/detail/combine_rvalue.hpp",
        "include/boost/range/detail/common.hpp",
        "include/boost/range/detail/default_constructible_unary_fn.hpp",
        "include/boost/range/detail/demote_iterator_traversal_tag.hpp",
        "include/boost/range/detail/detail_str.hpp",
        "include/boost/range/detail/difference_type.hpp",
        "include/boost/range/detail/empty.hpp",
        "include/boost/range/detail/end.hpp",
        "include/boost/range/detail/extract_optional_type.hpp",
        "include/boost/range/detail/has_member_size.hpp",
        "include/boost/range/detail/implementation_help.hpp",
        "include/boost/range/detail/join_iterator.hpp",
        "include/boost/range/detail/microsoft.hpp",
        "include/boost/range/detail/misc_concept.hpp",
        "include/boost/range/detail/msvc_has_iterator_workaround.hpp",
        "include/boost/range/detail/range_return.hpp",
        "include/boost/range/detail/remove_extent.hpp",
        "include/boost/range/detail/safe_bool.hpp",
        "include/boost/range/detail/sfinae.hpp",
        "include/boost/range/detail/size_type.hpp",
        "include/boost/range/detail/sizer.hpp",
        "include/boost/range/detail/str_types.hpp",
        "include/boost/range/detail/value_type.hpp",
        "include/boost/range/difference_type.hpp",
        "include/boost/range/distance.hpp",
        "include/boost/range/empty.hpp",
        "include/boost/range/end.hpp",
        "include/boost/range/functions.hpp",
        "include/boost/range/has_range_iterator.hpp",
        "include/boost/range/irange.hpp",
        "include/boost/range/istream_range.hpp",
        "include/boost/range/iterator.hpp",
        "include/boost/range/iterator_range.hpp",
        "include/boost/range/iterator_range_core.hpp",
        "include/boost/range/iterator_range_hash.hpp",
        "include/boost/range/iterator_range_io.hpp",
        "include/boost/range/join.hpp",
        "include/boost/range/metafunctions.hpp",
        "include/boost/range/mfc.hpp",
        "include/boost/range/mfc_map.hpp",
        "include/boost/range/mutable_iterator.hpp",
        "include/boost/range/numeric.hpp",
        "include/boost/range/pointer.hpp",
        "include/boost/range/range_fwd.hpp",
        "include/boost/range/rbegin.hpp",
        "include/boost/range/reference.hpp",
        "include/boost/range/rend.hpp",
        "include/boost/range/result_iterator.hpp",
        "include/boost/range/reverse_iterator.hpp",
        "include/boost/range/reverse_result_iterator.hpp",
        "include/boost/range/size.hpp",
        "include/boost/range/size_type.hpp",
        "include/boost/range/sub_range.hpp",
        "include/boost/range/traversal.hpp",
        "include/boost/range/value_type.hpp",
    ],
    copts = [],
    deps = [
        ":headers_only",
        # Because of boost/concept_check.hpp:
        "@boost_concept_check//:headers_only",
        # Because of boost/detail/workaround.hpp:
        "@boost_config//:headers_only",
        # Because of boost/tuple/tuple.hpp:
        "@boost_tuple//:headers_only",
        # Because of boost/iterator/iterator_concepts.hpp:
        "@boost_iterator//:headers_only",
        # Because of boost/type_traits/remove_reference.hpp:
        "@boost_type_traits//:headers_only",
        # Because of boost/assert.hpp:
        "@boost_assert//:headers_only",
        # Because of boost/utility/enable_if.hpp:
        "@boost_core//:headers_only",
        # Because of boost/mpl/if.hpp:
        "@boost_mpl//:headers_only",
        # Because of boost/optional/optional.hpp:
        "@boost_optional//:headers_only",
        # Because of boost/utility/result_of.hpp:
        "@boost_utility//:headers_only",
        # Because of boost/detail/is_sorted.hpp:
        "@boost_detail//:headers_only",
        # Because of boost/cast.hpp:
        "@boost_numeric_conversion//:headers_only",
        # Because of boost/functional/hash.hpp:
        "@boost_container_hash//:headers_only",
        # Because of boost/array.hpp:
        "@boost_array//:headers_only",
        # Because of boost/static_assert.hpp:
        "@boost_static_assert//:headers_only",
        # Because of boost/algorithm/minmax_element.hpp:
        "@boost_algorithm//:headers_only",
        # Because of boost/preprocessor/seq/for_each_i.hpp:
        "@boost_preprocessor//:headers_only",
        # Because of boost/regex.hpp:
        "@boost_regex//:headers_only",
        # Because of boost/move/utility.hpp:
        "@boost_move//:headers_only",
        # Because of boost/throw_exception.hpp:
        "@boost_throw_exception//:headers_only",
        # Because of boost/polymorphic_cast.hpp:
        "@boost_conversion//:headers_only",
        # Because of boost/fusion/support/tag_of_fwd.hpp:
        "@boost_fusion//:headers_only",
        # Because of boost/scoped_ptr.hpp:
        "@boost_smart_ptr//:headers_only",
        # Because of boost/predef.h:
        "@boost_predef//:headers_only",
        # Because of boost/integer/static_log2.hpp:
        "@boost_integer//:headers_only",
    ],
)
