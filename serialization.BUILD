package(default_visibility = ["//visibility:public"])

cc_library(
    name = "headers_only",
    hdrs = [
        "include/boost/archive/add_facet.hpp",
        "include/boost/archive/archive_exception.hpp",
        "include/boost/archive/basic_archive.hpp",
        "include/boost/archive/basic_binary_iarchive.hpp",
        "include/boost/archive/basic_binary_iprimitive.hpp",
        "include/boost/archive/basic_binary_oarchive.hpp",
        "include/boost/archive/basic_binary_oprimitive.hpp",
        "include/boost/archive/basic_streambuf_locale_saver.hpp",
        "include/boost/archive/basic_text_iarchive.hpp",
        "include/boost/archive/basic_text_iprimitive.hpp",
        "include/boost/archive/basic_text_oarchive.hpp",
        "include/boost/archive/basic_text_oprimitive.hpp",
        "include/boost/archive/basic_xml_archive.hpp",
        "include/boost/archive/basic_xml_iarchive.hpp",
        "include/boost/archive/basic_xml_oarchive.hpp",
        "include/boost/archive/binary_iarchive.hpp",
        "include/boost/archive/binary_iarchive_impl.hpp",
        "include/boost/archive/binary_oarchive.hpp",
        "include/boost/archive/binary_oarchive_impl.hpp",
        "include/boost/archive/binary_wiarchive.hpp",
        "include/boost/archive/binary_woarchive.hpp",
        "include/boost/archive/codecvt_null.hpp",
        "include/boost/archive/detail/abi_prefix.hpp",
        "include/boost/archive/detail/abi_suffix.hpp",
        "include/boost/archive/detail/archive_serializer_map.hpp",
        "include/boost/archive/detail/auto_link_archive.hpp",
        "include/boost/archive/detail/auto_link_warchive.hpp",
        "include/boost/archive/detail/basic_archive_impl.hpp",
        "include/boost/archive/detail/basic_config.hpp",
        "include/boost/archive/detail/basic_iarchive.hpp",
        "include/boost/archive/detail/basic_iserializer.hpp",
        "include/boost/archive/detail/basic_oarchive.hpp",
        "include/boost/archive/detail/basic_oserializer.hpp",
        "include/boost/archive/detail/basic_pointer_iserializer.hpp",
        "include/boost/archive/detail/basic_pointer_oserializer.hpp",
        "include/boost/archive/detail/basic_serializer.hpp",
        "include/boost/archive/detail/basic_serializer_map.hpp",
        "include/boost/archive/detail/check.hpp",
        "include/boost/archive/detail/common_iarchive.hpp",
        "include/boost/archive/detail/common_oarchive.hpp",
        "include/boost/archive/detail/decl.hpp",
        "include/boost/archive/detail/helper_collection.hpp",
        "include/boost/archive/detail/interface_iarchive.hpp",
        "include/boost/archive/detail/interface_oarchive.hpp",
        "include/boost/archive/detail/iserializer.hpp",
        "include/boost/archive/detail/oserializer.hpp",
        "include/boost/archive/detail/polymorphic_iarchive_route.hpp",
        "include/boost/archive/detail/polymorphic_oarchive_route.hpp",
        "include/boost/archive/detail/register_archive.hpp",
        "include/boost/archive/detail/utf8_codecvt_facet.hpp",
        "include/boost/archive/dinkumware.hpp",
        "include/boost/archive/impl/archive_serializer_map.ipp",
        "include/boost/archive/impl/basic_binary_iarchive.ipp",
        "include/boost/archive/impl/basic_binary_iprimitive.ipp",
        "include/boost/archive/impl/basic_binary_oarchive.ipp",
        "include/boost/archive/impl/basic_binary_oprimitive.ipp",
        "include/boost/archive/impl/basic_text_iarchive.ipp",
        "include/boost/archive/impl/basic_text_iprimitive.ipp",
        "include/boost/archive/impl/basic_text_oarchive.ipp",
        "include/boost/archive/impl/basic_text_oprimitive.ipp",
        "include/boost/archive/impl/basic_xml_grammar.hpp",
        "include/boost/archive/impl/basic_xml_iarchive.ipp",
        "include/boost/archive/impl/basic_xml_oarchive.ipp",
        "include/boost/archive/impl/text_iarchive_impl.ipp",
        "include/boost/archive/impl/text_oarchive_impl.ipp",
        "include/boost/archive/impl/text_wiarchive_impl.ipp",
        "include/boost/archive/impl/text_woarchive_impl.ipp",
        "include/boost/archive/impl/xml_iarchive_impl.ipp",
        "include/boost/archive/impl/xml_oarchive_impl.ipp",
        "include/boost/archive/impl/xml_wiarchive_impl.ipp",
        "include/boost/archive/impl/xml_woarchive_impl.ipp",
        "include/boost/archive/iterators/base64_exception.hpp",
        "include/boost/archive/iterators/base64_from_binary.hpp",
        "include/boost/archive/iterators/binary_from_base64.hpp",
        "include/boost/archive/iterators/dataflow.hpp",
        "include/boost/archive/iterators/dataflow_exception.hpp",
        "include/boost/archive/iterators/escape.hpp",
        "include/boost/archive/iterators/head_iterator.hpp",
        "include/boost/archive/iterators/insert_linebreaks.hpp",
        "include/boost/archive/iterators/istream_iterator.hpp",
        "include/boost/archive/iterators/mb_from_wchar.hpp",
        "include/boost/archive/iterators/ostream_iterator.hpp",
        "include/boost/archive/iterators/remove_whitespace.hpp",
        "include/boost/archive/iterators/transform_width.hpp",
        "include/boost/archive/iterators/unescape.hpp",
        "include/boost/archive/iterators/wchar_from_mb.hpp",
        "include/boost/archive/iterators/xml_escape.hpp",
        "include/boost/archive/iterators/xml_unescape.hpp",
        "include/boost/archive/iterators/xml_unescape_exception.hpp",
        "include/boost/archive/polymorphic_binary_iarchive.hpp",
        "include/boost/archive/polymorphic_binary_oarchive.hpp",
        "include/boost/archive/polymorphic_iarchive.hpp",
        "include/boost/archive/polymorphic_oarchive.hpp",
        "include/boost/archive/polymorphic_text_iarchive.hpp",
        "include/boost/archive/polymorphic_text_oarchive.hpp",
        "include/boost/archive/polymorphic_text_wiarchive.hpp",
        "include/boost/archive/polymorphic_text_woarchive.hpp",
        "include/boost/archive/polymorphic_xml_iarchive.hpp",
        "include/boost/archive/polymorphic_xml_oarchive.hpp",
        "include/boost/archive/polymorphic_xml_wiarchive.hpp",
        "include/boost/archive/polymorphic_xml_woarchive.hpp",
        "include/boost/archive/text_iarchive.hpp",
        "include/boost/archive/text_oarchive.hpp",
        "include/boost/archive/text_wiarchive.hpp",
        "include/boost/archive/text_woarchive.hpp",
        "include/boost/archive/tmpdir.hpp",
        "include/boost/archive/wcslen.hpp",
        "include/boost/archive/xml_archive_exception.hpp",
        "include/boost/archive/xml_iarchive.hpp",
        "include/boost/archive/xml_oarchive.hpp",
        "include/boost/archive/xml_wiarchive.hpp",
        "include/boost/archive/xml_woarchive.hpp",
        "include/boost/serialization/access.hpp",
        "include/boost/serialization/array.hpp",
        "include/boost/serialization/assume_abstract.hpp",
        "include/boost/serialization/base_object.hpp",
        "include/boost/serialization/binary_object.hpp",
        "include/boost/serialization/bitset.hpp",
        "include/boost/serialization/collection_size_type.hpp",
        "include/boost/serialization/collection_traits.hpp",
        "include/boost/serialization/collections_load_imp.hpp",
        "include/boost/serialization/collections_save_imp.hpp",
        "include/boost/serialization/complex.hpp",
        "include/boost/serialization/config.hpp",
        "include/boost/serialization/deque.hpp",
        "include/boost/serialization/detail/get_data.hpp",
        "include/boost/serialization/detail/is_default_constructible.hpp",
        "include/boost/serialization/detail/shared_count_132.hpp",
        "include/boost/serialization/detail/shared_ptr_132.hpp",
        "include/boost/serialization/detail/shared_ptr_nmt_132.hpp",
        "include/boost/serialization/detail/stack_constructor.hpp",
        "include/boost/serialization/ephemeral.hpp",
        "include/boost/serialization/export.hpp",
        "include/boost/serialization/extended_type_info.hpp",
        "include/boost/serialization/extended_type_info_no_rtti.hpp",
        "include/boost/serialization/extended_type_info_typeid.hpp",
        "include/boost/serialization/factory.hpp",
        "include/boost/serialization/force_include.hpp",
        "include/boost/serialization/forward_list.hpp",
        "include/boost/serialization/hash_collections_load_imp.hpp",
        "include/boost/serialization/hash_collections_save_imp.hpp",
        "include/boost/serialization/hash_map.hpp",
        "include/boost/serialization/hash_set.hpp",
        "include/boost/serialization/is_bitwise_serializable.hpp",
        "include/boost/serialization/item_version_type.hpp",
        "include/boost/serialization/level.hpp",
        "include/boost/serialization/level_enum.hpp",
        "include/boost/serialization/list.hpp",
        "include/boost/serialization/map.hpp",
        "include/boost/serialization/nvp.hpp",
        "include/boost/serialization/optional.hpp",
        "include/boost/serialization/pfto.hpp",
        "include/boost/serialization/priority_queue.hpp",
        "include/boost/serialization/queue.hpp",
        "include/boost/serialization/scoped_ptr.hpp",
        "include/boost/serialization/serialization.hpp",
        "include/boost/serialization/set.hpp",
        "include/boost/serialization/shared_ptr.hpp",
        "include/boost/serialization/shared_ptr_132.hpp",
        "include/boost/serialization/shared_ptr_helper.hpp",
        "include/boost/serialization/singleton.hpp",
        "include/boost/serialization/slist.hpp",
        "include/boost/serialization/smart_cast.hpp",
        "include/boost/serialization/split_free.hpp",
        "include/boost/serialization/split_member.hpp",
        "include/boost/serialization/stack.hpp",
        "include/boost/serialization/state_saver.hpp",
        "include/boost/serialization/static_warning.hpp",
        "include/boost/serialization/string.hpp",
        "include/boost/serialization/strong_typedef.hpp",
        "include/boost/serialization/throw_exception.hpp",
        "include/boost/serialization/tracking.hpp",
        "include/boost/serialization/tracking_enum.hpp",
        "include/boost/serialization/traits.hpp",
        "include/boost/serialization/type_info_implementation.hpp",
        "include/boost/serialization/unique_ptr.hpp",
        "include/boost/serialization/unordered_collections_load_imp.hpp",
        "include/boost/serialization/unordered_collections_save_imp.hpp",
        "include/boost/serialization/unordered_map.hpp",
        "include/boost/serialization/unordered_set.hpp",
        "include/boost/serialization/utility.hpp",
        "include/boost/serialization/valarray.hpp",
        "include/boost/serialization/variant.hpp",
        "include/boost/serialization/vector.hpp",
        "include/boost/serialization/vector_135.hpp",
        "include/boost/serialization/version.hpp",
        "include/boost/serialization/void_cast.hpp",
        "include/boost/serialization/void_cast_fwd.hpp",
        "include/boost/serialization/weak_ptr.hpp",
        "include/boost/serialization/wrapper.hpp",
    ],
    includes = [
        "include",
    ],
)

cc_library(
    name = "serialization",
    srcs = [
        "src/archive_exception.cpp",
        "src/basic_archive.cpp",
        "src/basic_iarchive.cpp",
        "src/basic_iserializer.cpp",
        "src/basic_oarchive.cpp",
        "src/basic_oserializer.cpp",
        "src/basic_pointer_iserializer.cpp",
        "src/basic_pointer_oserializer.cpp",
        "src/basic_serializer_map.cpp",
        "src/basic_text_iprimitive.cpp",
        "src/basic_text_oprimitive.cpp",
        "src/basic_text_wiprimitive.cpp",
        "src/basic_text_woprimitive.cpp",
        "src/basic_xml_archive.cpp",
        "src/binary_iarchive.cpp",
        "src/binary_oarchive.cpp",
        "src/binary_wiarchive.cpp",
        "src/binary_woarchive.cpp",
        "src/codecvt_null.cpp",
        "src/extended_type_info.cpp",
        "src/extended_type_info_no_rtti.cpp",
        "src/extended_type_info_typeid.cpp",
        "src/polymorphic_iarchive.cpp",
        "src/polymorphic_oarchive.cpp",
        "src/shared_ptr_helper.cpp",
        "src/stl_port.cpp",
        "src/text_iarchive.cpp",
        "src/text_oarchive.cpp",
        "src/text_wiarchive.cpp",
        "src/text_woarchive.cpp",
        "src/utf8_codecvt_facet.cpp",
        "src/void_cast.cpp",
        "src/xml_archive_exception.cpp",
        "src/xml_grammar.cpp",
        "src/xml_iarchive.cpp",
        "src/xml_oarchive.cpp",
        "src/xml_wgrammar.cpp",
        "src/xml_wiarchive.cpp",
        "src/xml_woarchive.cpp",
    ],
    hdrs = [
        "include/boost/archive/add_facet.hpp",
        "include/boost/archive/archive_exception.hpp",
        "include/boost/archive/basic_archive.hpp",
        "include/boost/archive/basic_binary_iarchive.hpp",
        "include/boost/archive/basic_binary_iprimitive.hpp",
        "include/boost/archive/basic_binary_oarchive.hpp",
        "include/boost/archive/basic_binary_oprimitive.hpp",
        "include/boost/archive/basic_streambuf_locale_saver.hpp",
        "include/boost/archive/basic_text_iarchive.hpp",
        "include/boost/archive/basic_text_iprimitive.hpp",
        "include/boost/archive/basic_text_oarchive.hpp",
        "include/boost/archive/basic_text_oprimitive.hpp",
        "include/boost/archive/basic_xml_archive.hpp",
        "include/boost/archive/basic_xml_iarchive.hpp",
        "include/boost/archive/basic_xml_oarchive.hpp",
        "include/boost/archive/binary_iarchive.hpp",
        "include/boost/archive/binary_iarchive_impl.hpp",
        "include/boost/archive/binary_oarchive.hpp",
        "include/boost/archive/binary_oarchive_impl.hpp",
        "include/boost/archive/binary_wiarchive.hpp",
        "include/boost/archive/binary_woarchive.hpp",
        "include/boost/archive/codecvt_null.hpp",
        "include/boost/archive/detail/abi_prefix.hpp",
        "include/boost/archive/detail/abi_suffix.hpp",
        "include/boost/archive/detail/archive_serializer_map.hpp",
        "include/boost/archive/detail/auto_link_archive.hpp",
        "include/boost/archive/detail/auto_link_warchive.hpp",
        "include/boost/archive/detail/basic_archive_impl.hpp",
        "include/boost/archive/detail/basic_config.hpp",
        "include/boost/archive/detail/basic_iarchive.hpp",
        "include/boost/archive/detail/basic_iserializer.hpp",
        "include/boost/archive/detail/basic_oarchive.hpp",
        "include/boost/archive/detail/basic_oserializer.hpp",
        "include/boost/archive/detail/basic_pointer_iserializer.hpp",
        "include/boost/archive/detail/basic_pointer_oserializer.hpp",
        "include/boost/archive/detail/basic_serializer.hpp",
        "include/boost/archive/detail/basic_serializer_map.hpp",
        "include/boost/archive/detail/check.hpp",
        "include/boost/archive/detail/common_iarchive.hpp",
        "include/boost/archive/detail/common_oarchive.hpp",
        "include/boost/archive/detail/decl.hpp",
        "include/boost/archive/detail/helper_collection.hpp",
        "include/boost/archive/detail/interface_iarchive.hpp",
        "include/boost/archive/detail/interface_oarchive.hpp",
        "include/boost/archive/detail/iserializer.hpp",
        "include/boost/archive/detail/oserializer.hpp",
        "include/boost/archive/detail/polymorphic_iarchive_route.hpp",
        "include/boost/archive/detail/polymorphic_oarchive_route.hpp",
        "include/boost/archive/detail/register_archive.hpp",
        "include/boost/archive/detail/utf8_codecvt_facet.hpp",
        "include/boost/archive/dinkumware.hpp",
        "include/boost/archive/impl/archive_serializer_map.ipp",
        "include/boost/archive/impl/basic_binary_iarchive.ipp",
        "include/boost/archive/impl/basic_binary_iprimitive.ipp",
        "include/boost/archive/impl/basic_binary_oarchive.ipp",
        "include/boost/archive/impl/basic_binary_oprimitive.ipp",
        "include/boost/archive/impl/basic_text_iarchive.ipp",
        "include/boost/archive/impl/basic_text_iprimitive.ipp",
        "include/boost/archive/impl/basic_text_oarchive.ipp",
        "include/boost/archive/impl/basic_text_oprimitive.ipp",
        "include/boost/archive/impl/basic_xml_grammar.hpp",
        "include/boost/archive/impl/basic_xml_iarchive.ipp",
        "include/boost/archive/impl/basic_xml_oarchive.ipp",
        "include/boost/archive/impl/text_iarchive_impl.ipp",
        "include/boost/archive/impl/text_oarchive_impl.ipp",
        "include/boost/archive/impl/text_wiarchive_impl.ipp",
        "include/boost/archive/impl/text_woarchive_impl.ipp",
        "include/boost/archive/impl/xml_iarchive_impl.ipp",
        "include/boost/archive/impl/xml_oarchive_impl.ipp",
        "include/boost/archive/impl/xml_wiarchive_impl.ipp",
        "include/boost/archive/impl/xml_woarchive_impl.ipp",
        "include/boost/archive/iterators/base64_exception.hpp",
        "include/boost/archive/iterators/base64_from_binary.hpp",
        "include/boost/archive/iterators/binary_from_base64.hpp",
        "include/boost/archive/iterators/dataflow.hpp",
        "include/boost/archive/iterators/dataflow_exception.hpp",
        "include/boost/archive/iterators/escape.hpp",
        "include/boost/archive/iterators/head_iterator.hpp",
        "include/boost/archive/iterators/insert_linebreaks.hpp",
        "include/boost/archive/iterators/istream_iterator.hpp",
        "include/boost/archive/iterators/mb_from_wchar.hpp",
        "include/boost/archive/iterators/ostream_iterator.hpp",
        "include/boost/archive/iterators/remove_whitespace.hpp",
        "include/boost/archive/iterators/transform_width.hpp",
        "include/boost/archive/iterators/unescape.hpp",
        "include/boost/archive/iterators/wchar_from_mb.hpp",
        "include/boost/archive/iterators/xml_escape.hpp",
        "include/boost/archive/iterators/xml_unescape.hpp",
        "include/boost/archive/iterators/xml_unescape_exception.hpp",
        "include/boost/archive/polymorphic_binary_iarchive.hpp",
        "include/boost/archive/polymorphic_binary_oarchive.hpp",
        "include/boost/archive/polymorphic_iarchive.hpp",
        "include/boost/archive/polymorphic_oarchive.hpp",
        "include/boost/archive/polymorphic_text_iarchive.hpp",
        "include/boost/archive/polymorphic_text_oarchive.hpp",
        "include/boost/archive/polymorphic_text_wiarchive.hpp",
        "include/boost/archive/polymorphic_text_woarchive.hpp",
        "include/boost/archive/polymorphic_xml_iarchive.hpp",
        "include/boost/archive/polymorphic_xml_oarchive.hpp",
        "include/boost/archive/polymorphic_xml_wiarchive.hpp",
        "include/boost/archive/polymorphic_xml_woarchive.hpp",
        "include/boost/archive/text_iarchive.hpp",
        "include/boost/archive/text_oarchive.hpp",
        "include/boost/archive/text_wiarchive.hpp",
        "include/boost/archive/text_woarchive.hpp",
        "include/boost/archive/tmpdir.hpp",
        "include/boost/archive/wcslen.hpp",
        "include/boost/archive/xml_archive_exception.hpp",
        "include/boost/archive/xml_iarchive.hpp",
        "include/boost/archive/xml_oarchive.hpp",
        "include/boost/archive/xml_wiarchive.hpp",
        "include/boost/archive/xml_woarchive.hpp",
        "include/boost/serialization/access.hpp",
        "include/boost/serialization/array.hpp",
        "include/boost/serialization/assume_abstract.hpp",
        "include/boost/serialization/base_object.hpp",
        "include/boost/serialization/binary_object.hpp",
        "include/boost/serialization/bitset.hpp",
        "include/boost/serialization/collection_size_type.hpp",
        "include/boost/serialization/collection_traits.hpp",
        "include/boost/serialization/collections_load_imp.hpp",
        "include/boost/serialization/collections_save_imp.hpp",
        "include/boost/serialization/complex.hpp",
        "include/boost/serialization/config.hpp",
        "include/boost/serialization/deque.hpp",
        "include/boost/serialization/detail/get_data.hpp",
        "include/boost/serialization/detail/is_default_constructible.hpp",
        "include/boost/serialization/detail/shared_count_132.hpp",
        "include/boost/serialization/detail/shared_ptr_132.hpp",
        "include/boost/serialization/detail/shared_ptr_nmt_132.hpp",
        "include/boost/serialization/detail/stack_constructor.hpp",
        "include/boost/serialization/ephemeral.hpp",
        "include/boost/serialization/export.hpp",
        "include/boost/serialization/extended_type_info.hpp",
        "include/boost/serialization/extended_type_info_no_rtti.hpp",
        "include/boost/serialization/extended_type_info_typeid.hpp",
        "include/boost/serialization/factory.hpp",
        "include/boost/serialization/force_include.hpp",
        "include/boost/serialization/forward_list.hpp",
        "include/boost/serialization/hash_collections_load_imp.hpp",
        "include/boost/serialization/hash_collections_save_imp.hpp",
        "include/boost/serialization/hash_map.hpp",
        "include/boost/serialization/hash_set.hpp",
        "include/boost/serialization/is_bitwise_serializable.hpp",
        "include/boost/serialization/item_version_type.hpp",
        "include/boost/serialization/level.hpp",
        "include/boost/serialization/level_enum.hpp",
        "include/boost/serialization/list.hpp",
        "include/boost/serialization/map.hpp",
        "include/boost/serialization/nvp.hpp",
        "include/boost/serialization/optional.hpp",
        "include/boost/serialization/pfto.hpp",
        "include/boost/serialization/priority_queue.hpp",
        "include/boost/serialization/queue.hpp",
        "include/boost/serialization/scoped_ptr.hpp",
        "include/boost/serialization/serialization.hpp",
        "include/boost/serialization/set.hpp",
        "include/boost/serialization/shared_ptr.hpp",
        "include/boost/serialization/shared_ptr_132.hpp",
        "include/boost/serialization/shared_ptr_helper.hpp",
        "include/boost/serialization/singleton.hpp",
        "include/boost/serialization/slist.hpp",
        "include/boost/serialization/smart_cast.hpp",
        "include/boost/serialization/split_free.hpp",
        "include/boost/serialization/split_member.hpp",
        "include/boost/serialization/stack.hpp",
        "include/boost/serialization/state_saver.hpp",
        "include/boost/serialization/static_warning.hpp",
        "include/boost/serialization/string.hpp",
        "include/boost/serialization/strong_typedef.hpp",
        "include/boost/serialization/throw_exception.hpp",
        "include/boost/serialization/tracking.hpp",
        "include/boost/serialization/tracking_enum.hpp",
        "include/boost/serialization/traits.hpp",
        "include/boost/serialization/type_info_implementation.hpp",
        "include/boost/serialization/unique_ptr.hpp",
        "include/boost/serialization/unordered_collections_load_imp.hpp",
        "include/boost/serialization/unordered_collections_save_imp.hpp",
        "include/boost/serialization/unordered_map.hpp",
        "include/boost/serialization/unordered_set.hpp",
        "include/boost/serialization/utility.hpp",
        "include/boost/serialization/valarray.hpp",
        "include/boost/serialization/variant.hpp",
        "include/boost/serialization/vector.hpp",
        "include/boost/serialization/vector_135.hpp",
        "include/boost/serialization/version.hpp",
        "include/boost/serialization/void_cast.hpp",
        "include/boost/serialization/void_cast_fwd.hpp",
        "include/boost/serialization/weak_ptr.hpp",
        "include/boost/serialization/wrapper.hpp",
    ],
    copts = [
        "-I./src",
    ],
    deps = [
        ":headers_only",
        "@boost_detail//:detail",
        "@boost_config//:config",
        "@boost_core//:core",
        "@boost_assert//:assert",
        "@boost_integer//:integer",
        # Because of boost/detail/utf8_codecvt_facet.ipp:
        "@boost_detail//:headers_only",
        # Because of boost/integer_traits.hpp:
        "@boost_integer//:headers_only",
        # Because of boost/limits.hpp:
        "@boost_config//:headers_only",
        # Because of boost/core/no_exceptions_support.hpp:
        "@boost_core//:headers_only",
        # Because of boost/assert.hpp:
        "@boost_assert//:headers_only",
        # Because of boost/preprocessor/empty.hpp:
        "@boost_preprocessor//:headers_only",
        # Because of boost/type_traits/is_polymorphic.hpp:
        "@boost_type_traits//:headers_only",
        # Because of boost/static_assert.hpp:
        "@boost_static_assert//:headers_only",
        # Because of boost/mpl/if.hpp:
        "@boost_mpl//:headers_only",
        # Because of boost/scoped_ptr.hpp:
        "@boost_smart_ptr//:headers_only",
        # Because of boost/detail/endian.hpp:
        "@boost_predef//:headers_only",
        # Because of boost/spirit/include/classic_rule.hpp:
        "@boost_spirit//:headers_only",
        # Because of boost/io/ios_state.hpp:
        "@boost_io//:headers_only",
        # Because of boost/call_traits.hpp:
        "@boost_utility//:headers_only",
        # Because of boost/iterator/iterator_facade.hpp:
        "@boost_iterator//:headers_only",
        # Because of boost/throw_exception.hpp:
        "@boost_throw_exception//:headers_only",
        # Because of boost/array.hpp:
        "@boost_array//:headers_only",
        # Because of boost/functional/hash_fwd.hpp:
        "@boost_functional//:headers_only",
        # Because of boost/align/align.hpp:
        "@boost_align//:headers_only",
        # Because of boost/optional.hpp:
        "@boost_optional//:headers_only",
        # Because of boost/move/utility.hpp:
        "@boost_move//:headers_only",
        # Because of boost/variant.hpp:
        "@boost_variant//:headers_only",
        # Because of boost/math/common_factor_ct.hpp:
        "@boost_math//:headers_only",
        # Because of boost/type_index.hpp:
        "@boost_type_index//:headers_only",
    ],
)
