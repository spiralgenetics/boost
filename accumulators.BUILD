package(default_visibility = ["//visibility:public"])

cc_library(
    name = "headers_only",
    hdrs = [
        "include/boost/accumulators/accumulators.hpp",
        "include/boost/accumulators/accumulators_fwd.hpp",
        "include/boost/accumulators/framework/accumulator_base.hpp",
        "include/boost/accumulators/framework/accumulator_concept.hpp",
        "include/boost/accumulators/framework/accumulator_set.hpp",
        "include/boost/accumulators/framework/accumulators/droppable_accumulator.hpp",
        "include/boost/accumulators/framework/accumulators/external_accumulator.hpp",
        "include/boost/accumulators/framework/accumulators/reference_accumulator.hpp",
        "include/boost/accumulators/framework/accumulators/value_accumulator.hpp",
        "include/boost/accumulators/framework/depends_on.hpp",
        "include/boost/accumulators/framework/external.hpp",
        "include/boost/accumulators/framework/extractor.hpp",
        "include/boost/accumulators/framework/features.hpp",
        "include/boost/accumulators/framework/parameters/accumulator.hpp",
        "include/boost/accumulators/framework/parameters/sample.hpp",
        "include/boost/accumulators/framework/parameters/weight.hpp",
        "include/boost/accumulators/framework/parameters/weights.hpp",
        "include/boost/accumulators/numeric/detail/function1.hpp",
        "include/boost/accumulators/numeric/detail/function2.hpp",
        "include/boost/accumulators/numeric/detail/function3.hpp",
        "include/boost/accumulators/numeric/detail/function4.hpp",
        "include/boost/accumulators/numeric/detail/function_n.hpp",
        "include/boost/accumulators/numeric/detail/pod_singleton.hpp",
        "include/boost/accumulators/numeric/functional.hpp",
        "include/boost/accumulators/numeric/functional/complex.hpp",
        "include/boost/accumulators/numeric/functional/valarray.hpp",
        "include/boost/accumulators/numeric/functional/vector.hpp",
        "include/boost/accumulators/numeric/functional_fwd.hpp",
        "include/boost/accumulators/statistics.hpp",
        "include/boost/accumulators/statistics/count.hpp",
        "include/boost/accumulators/statistics/covariance.hpp",
        "include/boost/accumulators/statistics/density.hpp",
        "include/boost/accumulators/statistics/error_of.hpp",
        "include/boost/accumulators/statistics/error_of_mean.hpp",
        "include/boost/accumulators/statistics/extended_p_square.hpp",
        "include/boost/accumulators/statistics/extended_p_square_quantile.hpp",
        "include/boost/accumulators/statistics/kurtosis.hpp",
        "include/boost/accumulators/statistics/max.hpp",
        "include/boost/accumulators/statistics/mean.hpp",
        "include/boost/accumulators/statistics/median.hpp",
        "include/boost/accumulators/statistics/min.hpp",
        "include/boost/accumulators/statistics/moment.hpp",
        "include/boost/accumulators/statistics/p_square_cumul_dist.hpp",
        "include/boost/accumulators/statistics/p_square_cumulative_distribution.hpp",
        "include/boost/accumulators/statistics/p_square_quantile.hpp",
        "include/boost/accumulators/statistics/parameters/quantile_probability.hpp",
        "include/boost/accumulators/statistics/peaks_over_threshold.hpp",
        "include/boost/accumulators/statistics/pot_quantile.hpp",
        "include/boost/accumulators/statistics/pot_tail_mean.hpp",
        "include/boost/accumulators/statistics/rolling_count.hpp",
        "include/boost/accumulators/statistics/rolling_mean.hpp",
        "include/boost/accumulators/statistics/rolling_moment.hpp",
        "include/boost/accumulators/statistics/rolling_sum.hpp",
        "include/boost/accumulators/statistics/rolling_variance.hpp",
        "include/boost/accumulators/statistics/rolling_window.hpp",
        "include/boost/accumulators/statistics/skewness.hpp",
        "include/boost/accumulators/statistics/stats.hpp",
        "include/boost/accumulators/statistics/sum.hpp",
        "include/boost/accumulators/statistics/sum_kahan.hpp",
        "include/boost/accumulators/statistics/tail.hpp",
        "include/boost/accumulators/statistics/tail_mean.hpp",
        "include/boost/accumulators/statistics/tail_quantile.hpp",
        "include/boost/accumulators/statistics/tail_variate.hpp",
        "include/boost/accumulators/statistics/tail_variate_means.hpp",
        "include/boost/accumulators/statistics/times2_iterator.hpp",
        "include/boost/accumulators/statistics/variance.hpp",
        "include/boost/accumulators/statistics/variates/covariate.hpp",
        "include/boost/accumulators/statistics/weighted_covariance.hpp",
        "include/boost/accumulators/statistics/weighted_density.hpp",
        "include/boost/accumulators/statistics/weighted_extended_p_square.hpp",
        "include/boost/accumulators/statistics/weighted_kurtosis.hpp",
        "include/boost/accumulators/statistics/weighted_mean.hpp",
        "include/boost/accumulators/statistics/weighted_median.hpp",
        "include/boost/accumulators/statistics/weighted_moment.hpp",
        "include/boost/accumulators/statistics/weighted_p_square_cumul_dist.hpp",
        "include/boost/accumulators/statistics/weighted_p_square_cumulative_distribution.hpp",
        "include/boost/accumulators/statistics/weighted_p_square_quantile.hpp",
        "include/boost/accumulators/statistics/weighted_peaks_over_threshold.hpp",
        "include/boost/accumulators/statistics/weighted_skewness.hpp",
        "include/boost/accumulators/statistics/weighted_sum.hpp",
        "include/boost/accumulators/statistics/weighted_sum_kahan.hpp",
        "include/boost/accumulators/statistics/weighted_tail_mean.hpp",
        "include/boost/accumulators/statistics/weighted_tail_quantile.hpp",
        "include/boost/accumulators/statistics/weighted_tail_variate_means.hpp",
        "include/boost/accumulators/statistics/weighted_variance.hpp",
        "include/boost/accumulators/statistics/with_error.hpp",
        "include/boost/accumulators/statistics_fwd.hpp",
    ],
    includes = [
        "include",
    ],
)

cc_library(
    name = "accumulators",
    srcs = [],
    hdrs = [
        "include/boost/accumulators/accumulators.hpp",
        "include/boost/accumulators/accumulators_fwd.hpp",
        "include/boost/accumulators/framework/accumulator_base.hpp",
        "include/boost/accumulators/framework/accumulator_concept.hpp",
        "include/boost/accumulators/framework/accumulator_set.hpp",
        "include/boost/accumulators/framework/accumulators/droppable_accumulator.hpp",
        "include/boost/accumulators/framework/accumulators/external_accumulator.hpp",
        "include/boost/accumulators/framework/accumulators/reference_accumulator.hpp",
        "include/boost/accumulators/framework/accumulators/value_accumulator.hpp",
        "include/boost/accumulators/framework/depends_on.hpp",
        "include/boost/accumulators/framework/external.hpp",
        "include/boost/accumulators/framework/extractor.hpp",
        "include/boost/accumulators/framework/features.hpp",
        "include/boost/accumulators/framework/parameters/accumulator.hpp",
        "include/boost/accumulators/framework/parameters/sample.hpp",
        "include/boost/accumulators/framework/parameters/weight.hpp",
        "include/boost/accumulators/framework/parameters/weights.hpp",
        "include/boost/accumulators/numeric/detail/function1.hpp",
        "include/boost/accumulators/numeric/detail/function2.hpp",
        "include/boost/accumulators/numeric/detail/function3.hpp",
        "include/boost/accumulators/numeric/detail/function4.hpp",
        "include/boost/accumulators/numeric/detail/function_n.hpp",
        "include/boost/accumulators/numeric/detail/pod_singleton.hpp",
        "include/boost/accumulators/numeric/functional.hpp",
        "include/boost/accumulators/numeric/functional/complex.hpp",
        "include/boost/accumulators/numeric/functional/valarray.hpp",
        "include/boost/accumulators/numeric/functional/vector.hpp",
        "include/boost/accumulators/numeric/functional_fwd.hpp",
        "include/boost/accumulators/statistics.hpp",
        "include/boost/accumulators/statistics/count.hpp",
        "include/boost/accumulators/statistics/covariance.hpp",
        "include/boost/accumulators/statistics/density.hpp",
        "include/boost/accumulators/statistics/error_of.hpp",
        "include/boost/accumulators/statistics/error_of_mean.hpp",
        "include/boost/accumulators/statistics/extended_p_square.hpp",
        "include/boost/accumulators/statistics/extended_p_square_quantile.hpp",
        "include/boost/accumulators/statistics/kurtosis.hpp",
        "include/boost/accumulators/statistics/max.hpp",
        "include/boost/accumulators/statistics/mean.hpp",
        "include/boost/accumulators/statistics/median.hpp",
        "include/boost/accumulators/statistics/min.hpp",
        "include/boost/accumulators/statistics/moment.hpp",
        "include/boost/accumulators/statistics/p_square_cumul_dist.hpp",
        "include/boost/accumulators/statistics/p_square_cumulative_distribution.hpp",
        "include/boost/accumulators/statistics/p_square_quantile.hpp",
        "include/boost/accumulators/statistics/parameters/quantile_probability.hpp",
        "include/boost/accumulators/statistics/peaks_over_threshold.hpp",
        "include/boost/accumulators/statistics/pot_quantile.hpp",
        "include/boost/accumulators/statistics/pot_tail_mean.hpp",
        "include/boost/accumulators/statistics/rolling_count.hpp",
        "include/boost/accumulators/statistics/rolling_mean.hpp",
        "include/boost/accumulators/statistics/rolling_moment.hpp",
        "include/boost/accumulators/statistics/rolling_sum.hpp",
        "include/boost/accumulators/statistics/rolling_variance.hpp",
        "include/boost/accumulators/statistics/rolling_window.hpp",
        "include/boost/accumulators/statistics/skewness.hpp",
        "include/boost/accumulators/statistics/stats.hpp",
        "include/boost/accumulators/statistics/sum.hpp",
        "include/boost/accumulators/statistics/sum_kahan.hpp",
        "include/boost/accumulators/statistics/tail.hpp",
        "include/boost/accumulators/statistics/tail_mean.hpp",
        "include/boost/accumulators/statistics/tail_quantile.hpp",
        "include/boost/accumulators/statistics/tail_variate.hpp",
        "include/boost/accumulators/statistics/tail_variate_means.hpp",
        "include/boost/accumulators/statistics/times2_iterator.hpp",
        "include/boost/accumulators/statistics/variance.hpp",
        "include/boost/accumulators/statistics/variates/covariate.hpp",
        "include/boost/accumulators/statistics/weighted_covariance.hpp",
        "include/boost/accumulators/statistics/weighted_density.hpp",
        "include/boost/accumulators/statistics/weighted_extended_p_square.hpp",
        "include/boost/accumulators/statistics/weighted_kurtosis.hpp",
        "include/boost/accumulators/statistics/weighted_mean.hpp",
        "include/boost/accumulators/statistics/weighted_median.hpp",
        "include/boost/accumulators/statistics/weighted_moment.hpp",
        "include/boost/accumulators/statistics/weighted_p_square_cumul_dist.hpp",
        "include/boost/accumulators/statistics/weighted_p_square_cumulative_distribution.hpp",
        "include/boost/accumulators/statistics/weighted_p_square_quantile.hpp",
        "include/boost/accumulators/statistics/weighted_peaks_over_threshold.hpp",
        "include/boost/accumulators/statistics/weighted_skewness.hpp",
        "include/boost/accumulators/statistics/weighted_sum.hpp",
        "include/boost/accumulators/statistics/weighted_sum_kahan.hpp",
        "include/boost/accumulators/statistics/weighted_tail_mean.hpp",
        "include/boost/accumulators/statistics/weighted_tail_quantile.hpp",
        "include/boost/accumulators/statistics/weighted_tail_variate_means.hpp",
        "include/boost/accumulators/statistics/weighted_variance.hpp",
        "include/boost/accumulators/statistics/with_error.hpp",
        "include/boost/accumulators/statistics_fwd.hpp",
    ],
    copts = [],
    deps = [
        ":headers_only",
        # Because of boost/version.hpp:
        "@boost_config//:headers_only",
        # Because of boost/assert.hpp:
        "@boost_assert//:headers_only",
        # Because of boost/range/iterator_range.hpp:
        "@boost_range//:headers_only",
        # Because of boost/circular_buffer.hpp:
        "@boost_circular_buffer//:headers_only",
        # Because of boost/type_traits/is_base_and_derived.hpp:
        "@boost_type_traits//:headers_only",
        # Because of boost/mpl/identity.hpp:
        "@boost_mpl//:headers_only",
        # Because of boost/preprocessor/repetition/repeat_from_to.hpp:
        "@boost_preprocessor//:headers_only",
        # Because of boost/fusion/include/any.hpp:
        "@boost_fusion//:headers_only",
        # Because of boost/parameter/parameters.hpp:
        "@boost_parameter//:headers_only",
        # Because of boost/iterator/transform_iterator.hpp:
        "@boost_iterator//:headers_only",
        # Because of boost/utility/enable_if.hpp:
        "@boost_core//:headers_only",
        # Because of boost/typeof/std/valarray.hpp:
        "@boost_typeof//:headers_only",
        # Because of boost/throw_exception.hpp:
        "@boost_throw_exception//:headers_only",
        # Because of boost/numeric/conversion/cast.hpp:
        "@boost_numeric_conversion//:headers_only",
        # Because of boost/tuple/tuple.hpp:
        "@boost_tuple//:headers_only",
        # Because of boost/numeric/ublas/matrix.hpp:
        "@boost_numeric_ublas//:headers_only",
        # Because of boost/array.hpp:
        "@boost_array//:headers_only",
        # Because of boost/concept_check.hpp:
        "@boost_concept_check//:headers_only",
        # Because of boost/static_assert.hpp:
        "@boost_static_assert//:headers_only",
        # Because of boost/detail/is_xxx.hpp:
        "@boost_detail//:headers_only",
        # Because of boost/utility/result_of.hpp:
        "@boost_utility//:headers_only",
        # Because of boost/serialization/array.hpp:
        "@boost_serialization//:headers_only",
        # Because of boost/functional/hash_fwd.hpp:
        "@boost_functional//:headers_only",
        # Because of boost/move/move.hpp:
        "@boost_move//:headers_only",
        # Because of boost/container/allocator_traits.hpp:
        "@boost_container//:headers_only",
        # Because of boost/intrusive/detail/mpl.hpp:
        "@boost_intrusive//:headers_only",
        # Because of boost/shared_array.hpp:
        "@boost_smart_ptr//:headers_only",
        # Because of boost/numeric/interval.hpp:
        "@boost_numeric_interval//:headers_only",
        # Because of boost/predef.h:
        "@boost_predef//:headers_only",
    ],
)
