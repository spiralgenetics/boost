package(visibility = ["//visibility:public"])

cc_library(
    name = "headers_only",
    hdrs = [
        "include/boost/fiber/algo/algorithm.hpp",
        "include/boost/fiber/algo/detail/chase_lev_queue.hpp",
        "include/boost/fiber/algo/round_robin.hpp",
        "include/boost/fiber/algo/shared_work.hpp",
        "include/boost/fiber/algo/work_stealing.hpp",
        "include/boost/fiber/all.hpp",
        "include/boost/fiber/barrier.hpp",
        "include/boost/fiber/bounded_channel.hpp",
        "include/boost/fiber/buffered_channel.hpp",
        "include/boost/fiber/channel_op_status.hpp",
        "include/boost/fiber/condition_variable.hpp",
        "include/boost/fiber/context.hpp",
        "include/boost/fiber/detail/config.hpp",
        "include/boost/fiber/detail/context_mpsc_queue.hpp",
        "include/boost/fiber/detail/context_spmc_queue.hpp",
        "include/boost/fiber/detail/convert.hpp",
        "include/boost/fiber/detail/cpu_relax.hpp",
        "include/boost/fiber/detail/data.hpp",
        "include/boost/fiber/detail/decay_copy.hpp",
        "include/boost/fiber/detail/disable_overload.hpp",
        "include/boost/fiber/detail/fss.hpp",
        "include/boost/fiber/detail/futex.hpp",
        "include/boost/fiber/detail/spinlock.hpp",
        "include/boost/fiber/detail/spinlock_ttas.hpp",
        "include/boost/fiber/detail/spinlock_ttas_adaptive.hpp",
        "include/boost/fiber/detail/spinlock_ttas_adaptive_futex.hpp",
        "include/boost/fiber/detail/spinlock_ttas_futex.hpp",
        "include/boost/fiber/detail/wrap.hpp",
        "include/boost/fiber/exceptions.hpp",
        "include/boost/fiber/fiber.hpp",
        "include/boost/fiber/fixedsize_stack.hpp",
        "include/boost/fiber/fss.hpp",
        "include/boost/fiber/future.hpp",
        "include/boost/fiber/future/async.hpp",
        "include/boost/fiber/future/detail/shared_state.hpp",
        "include/boost/fiber/future/detail/shared_state_object.hpp",
        "include/boost/fiber/future/detail/task_base.hpp",
        "include/boost/fiber/future/detail/task_object.hpp",
        "include/boost/fiber/future/future.hpp",
        "include/boost/fiber/future/future_status.hpp",
        "include/boost/fiber/future/packaged_task.hpp",
        "include/boost/fiber/future/promise.hpp",
        "include/boost/fiber/mutex.hpp",
        "include/boost/fiber/operations.hpp",
        "include/boost/fiber/policy.hpp",
        "include/boost/fiber/pooled_fixedsize_stack.hpp",
        "include/boost/fiber/properties.hpp",
        "include/boost/fiber/protected_fixedsize_stack.hpp",
        "include/boost/fiber/recursive_mutex.hpp",
        "include/boost/fiber/recursive_timed_mutex.hpp",
        "include/boost/fiber/scheduler.hpp",
        "include/boost/fiber/segmented_stack.hpp",
        "include/boost/fiber/timed_mutex.hpp",
        "include/boost/fiber/type.hpp",
        "include/boost/fiber/unbounded_channel.hpp",
        "include/boost/fiber/unbuffered_channel.hpp",
    ],
    includes = [
        "include",
    ],
)

cc_library(
    name = "fiber",
    srcs = [
        "src/algo/algorithm.cpp",
        "src/algo/round_robin.cpp",
        "src/algo/shared_work.cpp",
        "src/algo/work_stealing.cpp",
        "src/barrier.cpp",
        "src/condition_variable.cpp",
        "src/context.cpp",
        "src/fiber.cpp",
        "src/future.cpp",
        "src/mutex.cpp",
        "src/properties.cpp",
        "src/recursive_mutex.cpp",
        "src/recursive_timed_mutex.cpp",
        "src/scheduler.cpp",
        "src/timed_mutex.cpp",
    ],
    hdrs = [
        "include/boost/fiber/algo/algorithm.hpp",
        "include/boost/fiber/algo/detail/chase_lev_queue.hpp",
        "include/boost/fiber/algo/round_robin.hpp",
        "include/boost/fiber/algo/shared_work.hpp",
        "include/boost/fiber/algo/work_stealing.hpp",
        "include/boost/fiber/all.hpp",
        "include/boost/fiber/barrier.hpp",
        "include/boost/fiber/bounded_channel.hpp",
        "include/boost/fiber/buffered_channel.hpp",
        "include/boost/fiber/channel_op_status.hpp",
        "include/boost/fiber/condition_variable.hpp",
        "include/boost/fiber/context.hpp",
        "include/boost/fiber/detail/config.hpp",
        "include/boost/fiber/detail/context_mpsc_queue.hpp",
        "include/boost/fiber/detail/context_spmc_queue.hpp",
        "include/boost/fiber/detail/convert.hpp",
        "include/boost/fiber/detail/cpu_relax.hpp",
        "include/boost/fiber/detail/data.hpp",
        "include/boost/fiber/detail/decay_copy.hpp",
        "include/boost/fiber/detail/disable_overload.hpp",
        "include/boost/fiber/detail/fss.hpp",
        "include/boost/fiber/detail/futex.hpp",
        "include/boost/fiber/detail/spinlock.hpp",
        "include/boost/fiber/detail/spinlock_ttas.hpp",
        "include/boost/fiber/detail/spinlock_ttas_adaptive.hpp",
        "include/boost/fiber/detail/spinlock_ttas_adaptive_futex.hpp",
        "include/boost/fiber/detail/spinlock_ttas_futex.hpp",
        "include/boost/fiber/detail/wrap.hpp",
        "include/boost/fiber/exceptions.hpp",
        "include/boost/fiber/fiber.hpp",
        "include/boost/fiber/fixedsize_stack.hpp",
        "include/boost/fiber/fss.hpp",
        "include/boost/fiber/future.hpp",
        "include/boost/fiber/future/async.hpp",
        "include/boost/fiber/future/detail/shared_state.hpp",
        "include/boost/fiber/future/detail/shared_state_object.hpp",
        "include/boost/fiber/future/detail/task_base.hpp",
        "include/boost/fiber/future/detail/task_object.hpp",
        "include/boost/fiber/future/future.hpp",
        "include/boost/fiber/future/future_status.hpp",
        "include/boost/fiber/future/packaged_task.hpp",
        "include/boost/fiber/future/promise.hpp",
        "include/boost/fiber/mutex.hpp",
        "include/boost/fiber/operations.hpp",
        "include/boost/fiber/policy.hpp",
        "include/boost/fiber/pooled_fixedsize_stack.hpp",
        "include/boost/fiber/properties.hpp",
        "include/boost/fiber/protected_fixedsize_stack.hpp",
        "include/boost/fiber/recursive_mutex.hpp",
        "include/boost/fiber/recursive_timed_mutex.hpp",
        "include/boost/fiber/scheduler.hpp",
        "include/boost/fiber/segmented_stack.hpp",
        "include/boost/fiber/timed_mutex.hpp",
        "include/boost/fiber/type.hpp",
        "include/boost/fiber/unbounded_channel.hpp",
        "include/boost/fiber/unbuffered_channel.hpp",
    ],
    copts = [
        "-I./src",
    ],
    visibility = ["//visibility:public"],
    deps = [
        ":@boost_align//:align",
        ":@boost_assert//:assert",
        ":@boost_bind//:bind",
        ":@boost_concept_check//:concept_check",
        ":@boost_config//:config",
        ":@boost_context//:context",
        ":@boost_conversion//:conversion",
        ":@boost_core//:core",
        ":@boost_detail//:detail",
        ":@boost_function//:function",
        ":@boost_function_types//:function_types",
        ":@boost_functional//:functional",
        ":@boost_integer//:integer",
        ":@boost_intrusive//:intrusive",
        ":@boost_iterator//:iterator",
        ":@boost_move//:move",
        ":@boost_mpl//:mpl",
        ":@boost_optional//:optional",
        ":@boost_preprocessor//:preprocessor",
        ":@boost_smart_ptr//:smart_ptr",
        ":@boost_static_assert//:static_assert",
        ":@boost_throw_exception//:throw_exception",
        ":@boost_tuple//:tuple",
        ":@boost_type_traits//:type_traits",
        ":@boost_typeof//:typeof",
        ":@boost_utility//:utility",
        ":fiber_hdrs",
    ],
)
