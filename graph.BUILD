package(default_visibility = ["//visibility:public"])

cc_library(
    name = "headers_only",
    hdrs = [
        "include/boost/detail/algorithm.hpp",
        "include/boost/graph/adj_list_serialize.hpp",
        "include/boost/graph/adjacency_iterator.hpp",
        "include/boost/graph/adjacency_list.hpp",
        "include/boost/graph/adjacency_list_io.hpp",
        "include/boost/graph/adjacency_matrix.hpp",
        "include/boost/graph/astar_search.hpp",
        "include/boost/graph/bandwidth.hpp",
        "include/boost/graph/bc_clustering.hpp",
        "include/boost/graph/bellman_ford_shortest_paths.hpp",
        "include/boost/graph/betweenness_centrality.hpp",
        "include/boost/graph/biconnected_components.hpp",
        "include/boost/graph/bipartite.hpp",
        "include/boost/graph/boyer_myrvold_planar_test.hpp",
        "include/boost/graph/boykov_kolmogorov_max_flow.hpp",
        "include/boost/graph/breadth_first_search.hpp",
        "include/boost/graph/bron_kerbosch_all_cliques.hpp",
        "include/boost/graph/buffer_concepts.hpp",
        "include/boost/graph/chrobak_payne_drawing.hpp",
        "include/boost/graph/circle_layout.hpp",
        "include/boost/graph/closeness_centrality.hpp",
        "include/boost/graph/clustering_coefficient.hpp",
        "include/boost/graph/compressed_sparse_row_graph.hpp",
        "include/boost/graph/connected_components.hpp",
        "include/boost/graph/copy.hpp",
        "include/boost/graph/core_numbers.hpp",
        "include/boost/graph/create_condensation_graph.hpp",
        "include/boost/graph/cuthill_mckee_ordering.hpp",
        "include/boost/graph/cycle_canceling.hpp",
        "include/boost/graph/dag_shortest_paths.hpp",
        "include/boost/graph/degree_centrality.hpp",
        "include/boost/graph/depth_first_search.hpp",
        "include/boost/graph/detail/adj_list_edge_iterator.hpp",
        "include/boost/graph/detail/adjacency_list.hpp",
        "include/boost/graph/detail/array_binary_tree.hpp",
        "include/boost/graph/detail/augment.hpp",
        "include/boost/graph/detail/compressed_sparse_row_struct.hpp",
        "include/boost/graph/detail/connected_components.hpp",
        "include/boost/graph/detail/d_ary_heap.hpp",
        "include/boost/graph/detail/edge.hpp",
        "include/boost/graph/detail/empty_header.hpp",
        "include/boost/graph/detail/geodesic.hpp",
        "include/boost/graph/detail/histogram_sort.hpp",
        "include/boost/graph/detail/incidence_iterator.hpp",
        "include/boost/graph/detail/incremental_components.hpp",
        "include/boost/graph/detail/index.hpp",
        "include/boost/graph/detail/indexed_properties.hpp",
        "include/boost/graph/detail/is_distributed_selector.hpp",
        "include/boost/graph/detail/labeled_graph_traits.hpp",
        "include/boost/graph/detail/list_base.hpp",
        "include/boost/graph/detail/mpi_include.hpp",
        "include/boost/graph/detail/permutation.hpp",
        "include/boost/graph/detail/read_graphviz_new.hpp",
        "include/boost/graph/detail/read_graphviz_spirit.hpp",
        "include/boost/graph/detail/self_avoiding_walk.hpp",
        "include/boost/graph/detail/set_adaptor.hpp",
        "include/boost/graph/detail/shadow_iterator.hpp",
        "include/boost/graph/detail/sparse_ordering.hpp",
        "include/boost/graph/dijkstra_shortest_paths.hpp",
        "include/boost/graph/dijkstra_shortest_paths_no_color_map.hpp",
        "include/boost/graph/dimacs.hpp",
        "include/boost/graph/directed_graph.hpp",
        "include/boost/graph/dll_import_export.hpp",
        "include/boost/graph/dominator_tree.hpp",
        "include/boost/graph/eccentricity.hpp",
        "include/boost/graph/edge_coloring.hpp",
        "include/boost/graph/edge_connectivity.hpp",
        "include/boost/graph/edge_list.hpp",
        "include/boost/graph/edmonds_karp_max_flow.hpp",
        "include/boost/graph/edmunds_karp_max_flow.hpp",
        "include/boost/graph/erdos_renyi_generator.hpp",
        "include/boost/graph/exception.hpp",
        "include/boost/graph/exterior_property.hpp",
        "include/boost/graph/filtered_graph.hpp",
        "include/boost/graph/find_flow_cost.hpp",
        "include/boost/graph/floyd_warshall_shortest.hpp",
        "include/boost/graph/fruchterman_reingold.hpp",
        "include/boost/graph/geodesic_distance.hpp",
        "include/boost/graph/graph_archetypes.hpp",
        "include/boost/graph/graph_as_tree.hpp",
        "include/boost/graph/graph_concepts.hpp",
        "include/boost/graph/graph_mutability_traits.hpp",
        "include/boost/graph/graph_selectors.hpp",
        "include/boost/graph/graph_stats.hpp",
        "include/boost/graph/graph_traits.hpp",
        "include/boost/graph/graph_utility.hpp",
        "include/boost/graph/graphml.hpp",
        "include/boost/graph/graphviz.hpp",
        "include/boost/graph/grid_graph.hpp",
        "include/boost/graph/gursoy_atun_layout.hpp",
        "include/boost/graph/hawick_circuits.hpp",
        "include/boost/graph/howard_cycle_ratio.hpp",
        "include/boost/graph/incremental_components.hpp",
        "include/boost/graph/is_kuratowski_subgraph.hpp",
        "include/boost/graph/is_straight_line_drawing.hpp",
        "include/boost/graph/isomorphism.hpp",
        "include/boost/graph/iteration_macros.hpp",
        "include/boost/graph/iteration_macros_undef.hpp",
        "include/boost/graph/johnson_all_pairs_shortest.hpp",
        "include/boost/graph/kamada_kawai_spring_layout.hpp",
        "include/boost/graph/king_ordering.hpp",
        "include/boost/graph/kruskal_min_spanning_tree.hpp",
        "include/boost/graph/labeled_graph.hpp",
        "include/boost/graph/leda_graph.hpp",
        "include/boost/graph/lookup_edge.hpp",
        "include/boost/graph/loop_erased_random_walk.hpp",
        "include/boost/graph/make_biconnected_planar.hpp",
        "include/boost/graph/make_connected.hpp",
        "include/boost/graph/make_maximal_planar.hpp",
        "include/boost/graph/matrix_as_graph.hpp",
        "include/boost/graph/max_cardinality_matching.hpp",
        "include/boost/graph/maximum_adjacency_search.hpp",
        "include/boost/graph/maximum_weighted_matching.hpp",
        "include/boost/graph/mcgregor_common_subgraphs.hpp",
        "include/boost/graph/mesh_graph_generator.hpp",
        "include/boost/graph/metis.hpp",
        "include/boost/graph/metric_tsp_approx.hpp",
        "include/boost/graph/minimum_degree_ordering.hpp",
        "include/boost/graph/named_function_params.hpp",
        "include/boost/graph/named_graph.hpp",
        "include/boost/graph/neighbor_bfs.hpp",
        "include/boost/graph/numeric_values.hpp",
        "include/boost/graph/one_bit_color_map.hpp",
        "include/boost/graph/overloading.hpp",
        "include/boost/graph/page_rank.hpp",
        "include/boost/graph/planar_canonical_ordering.hpp",
        "include/boost/graph/planar_detail/add_edge_visitors.hpp",
        "include/boost/graph/planar_detail/boyer_myrvold_impl.hpp",
        "include/boost/graph/planar_detail/bucket_sort.hpp",
        "include/boost/graph/planar_detail/face_handles.hpp",
        "include/boost/graph/planar_detail/face_iterators.hpp",
        "include/boost/graph/planar_face_traversal.hpp",
        "include/boost/graph/plod_generator.hpp",
        "include/boost/graph/point_traits.hpp",
        "include/boost/graph/prim_minimum_spanning_tree.hpp",
        "include/boost/graph/profile.hpp",
        "include/boost/graph/properties.hpp",
        "include/boost/graph/property_iter_range.hpp",
        "include/boost/graph/property_maps/constant_property_map.hpp",
        "include/boost/graph/property_maps/container_property_map.hpp",
        "include/boost/graph/property_maps/matrix_property_map.hpp",
        "include/boost/graph/property_maps/null_property_map.hpp",
        "include/boost/graph/push_relabel_max_flow.hpp",
        "include/boost/graph/r_c_shortest_paths.hpp",
        "include/boost/graph/random.hpp",
        "include/boost/graph/random_layout.hpp",
        "include/boost/graph/random_spanning_tree.hpp",
        "include/boost/graph/read_dimacs.hpp",
        "include/boost/graph/relax.hpp",
        "include/boost/graph/reverse_graph.hpp",
        "include/boost/graph/rmat_graph_generator.hpp",
        "include/boost/graph/sequential_vertex_coloring.hpp",
        "include/boost/graph/simple_point.hpp",
        "include/boost/graph/sloan_ordering.hpp",
        "include/boost/graph/small_world_generator.hpp",
        "include/boost/graph/smallest_last_ordering.hpp",
        "include/boost/graph/ssca_graph_generator.hpp",
        "include/boost/graph/st_connected.hpp",
        "include/boost/graph/stanford_graph.hpp",
        "include/boost/graph/stoer_wagner_min_cut.hpp",
        "include/boost/graph/strong_components.hpp",
        "include/boost/graph/subgraph.hpp",
        "include/boost/graph/successive_shortest_path_nonnegative_weights.hpp",
        "include/boost/graph/tiernan_all_cycles.hpp",
        "include/boost/graph/topological_sort.hpp",
        "include/boost/graph/topology.hpp",
        "include/boost/graph/transitive_closure.hpp",
        "include/boost/graph/transitive_reduction.hpp",
        "include/boost/graph/transpose_graph.hpp",
        "include/boost/graph/tree_traits.hpp",
        "include/boost/graph/two_bit_color_map.hpp",
        "include/boost/graph/two_graphs_common_spanning_trees.hpp",
        "include/boost/graph/undirected_dfs.hpp",
        "include/boost/graph/undirected_graph.hpp",
        "include/boost/graph/use_mpi.hpp",
        "include/boost/graph/vector_as_graph.hpp",
        "include/boost/graph/vertex_and_edge_range.hpp",
        "include/boost/graph/vf2_sub_graph_iso.hpp",
        "include/boost/graph/visitors.hpp",
        "include/boost/graph/wavefront.hpp",
        "include/boost/graph/write_dimacs.hpp",
        "include/boost/pending/bucket_sorter.hpp",
        "include/boost/pending/container_traits.hpp",
        "include/boost/pending/detail/property.hpp",
        "include/boost/pending/fenced_priority_queue.hpp",
        "include/boost/pending/fibonacci_heap.hpp",
        "include/boost/pending/indirect_cmp.hpp",
        "include/boost/pending/is_heap.hpp",
        "include/boost/pending/mutable_heap.hpp",
        "include/boost/pending/mutable_queue.hpp",
        "include/boost/pending/property.hpp",
        "include/boost/pending/property_serialize.hpp",
        "include/boost/pending/queue.hpp",
        "include/boost/pending/relaxed_heap.hpp",
        "include/boost/pending/stringtok.hpp",
    ],
    includes = [
        "include",
    ],
)

cc_library(
    name = "graph",
    srcs = [
        "src/graphml.cpp",
        "src/read_graphviz_new.cpp",
    ],
    hdrs = [
        "include/boost/detail/algorithm.hpp",
        "include/boost/graph/adj_list_serialize.hpp",
        "include/boost/graph/adjacency_iterator.hpp",
        "include/boost/graph/adjacency_list.hpp",
        "include/boost/graph/adjacency_list_io.hpp",
        "include/boost/graph/adjacency_matrix.hpp",
        "include/boost/graph/astar_search.hpp",
        "include/boost/graph/bandwidth.hpp",
        "include/boost/graph/bc_clustering.hpp",
        "include/boost/graph/bellman_ford_shortest_paths.hpp",
        "include/boost/graph/betweenness_centrality.hpp",
        "include/boost/graph/biconnected_components.hpp",
        "include/boost/graph/bipartite.hpp",
        "include/boost/graph/boyer_myrvold_planar_test.hpp",
        "include/boost/graph/boykov_kolmogorov_max_flow.hpp",
        "include/boost/graph/breadth_first_search.hpp",
        "include/boost/graph/bron_kerbosch_all_cliques.hpp",
        "include/boost/graph/buffer_concepts.hpp",
        "include/boost/graph/chrobak_payne_drawing.hpp",
        "include/boost/graph/circle_layout.hpp",
        "include/boost/graph/closeness_centrality.hpp",
        "include/boost/graph/clustering_coefficient.hpp",
        "include/boost/graph/compressed_sparse_row_graph.hpp",
        "include/boost/graph/connected_components.hpp",
        "include/boost/graph/copy.hpp",
        "include/boost/graph/core_numbers.hpp",
        "include/boost/graph/create_condensation_graph.hpp",
        "include/boost/graph/cuthill_mckee_ordering.hpp",
        "include/boost/graph/cycle_canceling.hpp",
        "include/boost/graph/dag_shortest_paths.hpp",
        "include/boost/graph/degree_centrality.hpp",
        "include/boost/graph/depth_first_search.hpp",
        "include/boost/graph/detail/adj_list_edge_iterator.hpp",
        "include/boost/graph/detail/adjacency_list.hpp",
        "include/boost/graph/detail/array_binary_tree.hpp",
        "include/boost/graph/detail/augment.hpp",
        "include/boost/graph/detail/compressed_sparse_row_struct.hpp",
        "include/boost/graph/detail/connected_components.hpp",
        "include/boost/graph/detail/d_ary_heap.hpp",
        "include/boost/graph/detail/edge.hpp",
        "include/boost/graph/detail/empty_header.hpp",
        "include/boost/graph/detail/geodesic.hpp",
        "include/boost/graph/detail/histogram_sort.hpp",
        "include/boost/graph/detail/incidence_iterator.hpp",
        "include/boost/graph/detail/incremental_components.hpp",
        "include/boost/graph/detail/index.hpp",
        "include/boost/graph/detail/indexed_properties.hpp",
        "include/boost/graph/detail/is_distributed_selector.hpp",
        "include/boost/graph/detail/labeled_graph_traits.hpp",
        "include/boost/graph/detail/list_base.hpp",
        "include/boost/graph/detail/mpi_include.hpp",
        "include/boost/graph/detail/permutation.hpp",
        "include/boost/graph/detail/read_graphviz_new.hpp",
        "include/boost/graph/detail/read_graphviz_spirit.hpp",
        "include/boost/graph/detail/self_avoiding_walk.hpp",
        "include/boost/graph/detail/set_adaptor.hpp",
        "include/boost/graph/detail/shadow_iterator.hpp",
        "include/boost/graph/detail/sparse_ordering.hpp",
        "include/boost/graph/dijkstra_shortest_paths.hpp",
        "include/boost/graph/dijkstra_shortest_paths_no_color_map.hpp",
        "include/boost/graph/dimacs.hpp",
        "include/boost/graph/directed_graph.hpp",
        "include/boost/graph/dll_import_export.hpp",
        "include/boost/graph/dominator_tree.hpp",
        "include/boost/graph/eccentricity.hpp",
        "include/boost/graph/edge_coloring.hpp",
        "include/boost/graph/edge_connectivity.hpp",
        "include/boost/graph/edge_list.hpp",
        "include/boost/graph/edmonds_karp_max_flow.hpp",
        "include/boost/graph/edmunds_karp_max_flow.hpp",
        "include/boost/graph/erdos_renyi_generator.hpp",
        "include/boost/graph/exception.hpp",
        "include/boost/graph/exterior_property.hpp",
        "include/boost/graph/filtered_graph.hpp",
        "include/boost/graph/find_flow_cost.hpp",
        "include/boost/graph/floyd_warshall_shortest.hpp",
        "include/boost/graph/fruchterman_reingold.hpp",
        "include/boost/graph/geodesic_distance.hpp",
        "include/boost/graph/graph_archetypes.hpp",
        "include/boost/graph/graph_as_tree.hpp",
        "include/boost/graph/graph_concepts.hpp",
        "include/boost/graph/graph_mutability_traits.hpp",
        "include/boost/graph/graph_selectors.hpp",
        "include/boost/graph/graph_stats.hpp",
        "include/boost/graph/graph_traits.hpp",
        "include/boost/graph/graph_utility.hpp",
        "include/boost/graph/graphml.hpp",
        "include/boost/graph/graphviz.hpp",
        "include/boost/graph/grid_graph.hpp",
        "include/boost/graph/gursoy_atun_layout.hpp",
        "include/boost/graph/hawick_circuits.hpp",
        "include/boost/graph/howard_cycle_ratio.hpp",
        "include/boost/graph/incremental_components.hpp",
        "include/boost/graph/is_kuratowski_subgraph.hpp",
        "include/boost/graph/is_straight_line_drawing.hpp",
        "include/boost/graph/isomorphism.hpp",
        "include/boost/graph/iteration_macros.hpp",
        "include/boost/graph/iteration_macros_undef.hpp",
        "include/boost/graph/johnson_all_pairs_shortest.hpp",
        "include/boost/graph/kamada_kawai_spring_layout.hpp",
        "include/boost/graph/king_ordering.hpp",
        "include/boost/graph/kruskal_min_spanning_tree.hpp",
        "include/boost/graph/labeled_graph.hpp",
        "include/boost/graph/leda_graph.hpp",
        "include/boost/graph/lookup_edge.hpp",
        "include/boost/graph/loop_erased_random_walk.hpp",
        "include/boost/graph/make_biconnected_planar.hpp",
        "include/boost/graph/make_connected.hpp",
        "include/boost/graph/make_maximal_planar.hpp",
        "include/boost/graph/matrix_as_graph.hpp",
        "include/boost/graph/max_cardinality_matching.hpp",
        "include/boost/graph/maximum_adjacency_search.hpp",
        "include/boost/graph/maximum_weighted_matching.hpp",
        "include/boost/graph/mcgregor_common_subgraphs.hpp",
        "include/boost/graph/mesh_graph_generator.hpp",
        "include/boost/graph/metis.hpp",
        "include/boost/graph/metric_tsp_approx.hpp",
        "include/boost/graph/minimum_degree_ordering.hpp",
        "include/boost/graph/named_function_params.hpp",
        "include/boost/graph/named_graph.hpp",
        "include/boost/graph/neighbor_bfs.hpp",
        "include/boost/graph/numeric_values.hpp",
        "include/boost/graph/one_bit_color_map.hpp",
        "include/boost/graph/overloading.hpp",
        "include/boost/graph/page_rank.hpp",
        "include/boost/graph/planar_canonical_ordering.hpp",
        "include/boost/graph/planar_detail/add_edge_visitors.hpp",
        "include/boost/graph/planar_detail/boyer_myrvold_impl.hpp",
        "include/boost/graph/planar_detail/bucket_sort.hpp",
        "include/boost/graph/planar_detail/face_handles.hpp",
        "include/boost/graph/planar_detail/face_iterators.hpp",
        "include/boost/graph/planar_face_traversal.hpp",
        "include/boost/graph/plod_generator.hpp",
        "include/boost/graph/point_traits.hpp",
        "include/boost/graph/prim_minimum_spanning_tree.hpp",
        "include/boost/graph/profile.hpp",
        "include/boost/graph/properties.hpp",
        "include/boost/graph/property_iter_range.hpp",
        "include/boost/graph/property_maps/constant_property_map.hpp",
        "include/boost/graph/property_maps/container_property_map.hpp",
        "include/boost/graph/property_maps/matrix_property_map.hpp",
        "include/boost/graph/property_maps/null_property_map.hpp",
        "include/boost/graph/push_relabel_max_flow.hpp",
        "include/boost/graph/r_c_shortest_paths.hpp",
        "include/boost/graph/random.hpp",
        "include/boost/graph/random_layout.hpp",
        "include/boost/graph/random_spanning_tree.hpp",
        "include/boost/graph/read_dimacs.hpp",
        "include/boost/graph/relax.hpp",
        "include/boost/graph/reverse_graph.hpp",
        "include/boost/graph/rmat_graph_generator.hpp",
        "include/boost/graph/sequential_vertex_coloring.hpp",
        "include/boost/graph/simple_point.hpp",
        "include/boost/graph/sloan_ordering.hpp",
        "include/boost/graph/small_world_generator.hpp",
        "include/boost/graph/smallest_last_ordering.hpp",
        "include/boost/graph/ssca_graph_generator.hpp",
        "include/boost/graph/st_connected.hpp",
        "include/boost/graph/stanford_graph.hpp",
        "include/boost/graph/stoer_wagner_min_cut.hpp",
        "include/boost/graph/strong_components.hpp",
        "include/boost/graph/subgraph.hpp",
        "include/boost/graph/successive_shortest_path_nonnegative_weights.hpp",
        "include/boost/graph/tiernan_all_cycles.hpp",
        "include/boost/graph/topological_sort.hpp",
        "include/boost/graph/topology.hpp",
        "include/boost/graph/transitive_closure.hpp",
        "include/boost/graph/transitive_reduction.hpp",
        "include/boost/graph/transpose_graph.hpp",
        "include/boost/graph/tree_traits.hpp",
        "include/boost/graph/two_bit_color_map.hpp",
        "include/boost/graph/two_graphs_common_spanning_trees.hpp",
        "include/boost/graph/undirected_dfs.hpp",
        "include/boost/graph/undirected_graph.hpp",
        "include/boost/graph/use_mpi.hpp",
        "include/boost/graph/vector_as_graph.hpp",
        "include/boost/graph/vertex_and_edge_range.hpp",
        "include/boost/graph/vf2_sub_graph_iso.hpp",
        "include/boost/graph/visitors.hpp",
        "include/boost/graph/wavefront.hpp",
        "include/boost/graph/write_dimacs.hpp",
        "include/boost/pending/bucket_sorter.hpp",
        "include/boost/pending/container_traits.hpp",
        "include/boost/pending/detail/property.hpp",
        "include/boost/pending/fenced_priority_queue.hpp",
        "include/boost/pending/fibonacci_heap.hpp",
        "include/boost/pending/indirect_cmp.hpp",
        "include/boost/pending/is_heap.hpp",
        "include/boost/pending/mutable_heap.hpp",
        "include/boost/pending/mutable_queue.hpp",
        "include/boost/pending/property.hpp",
        "include/boost/pending/property_serialize.hpp",
        "include/boost/pending/queue.hpp",
        "include/boost/pending/relaxed_heap.hpp",
        "include/boost/pending/stringtok.hpp",
    ],
    copts = [
        "-I./src",
    ],
    deps = [
        ":headers_only",
        "@boost_config//:config",
        "@boost_core//:core",
        "@boost_throw_exception//:throw_exception",
        "@boost_foreach//:foreach",
        "@boost_assert//:assert",
        "@boost_function//:function",
        "@boost_property_map//:property_map",
        "@boost_bind//:bind",
        "@boost_property_tree//:property_tree",
        "@boost_optional//:optional",
        "@boost_algorithm//:algorithm",
        "@boost_regex//:regex",
        # Because of boost/assert.hpp:
        "@boost_assert//:headers_only",
        # Because of boost/foreach.hpp:
        "@boost_foreach//:headers_only",
        # Because of boost/regex.hpp:
        "@boost_regex//:headers_only",
        # Because of boost/ref.hpp:
        "@boost_core//:headers_only",
        # Because of boost/optional.hpp:
        "@boost_optional//:headers_only",
        # Because of boost/throw_exception.hpp:
        "@boost_throw_exception//:headers_only",
        # Because of boost/algorithm/string/case_conv.hpp:
        "@boost_algorithm//:headers_only",
        # Because of boost/property_tree/ptree.hpp:
        "@boost_property_tree//:headers_only",
        # Because of boost/bind.hpp:
        "@boost_bind//:headers_only",
        # Because of boost/function/function2.hpp:
        "@boost_function//:headers_only",
        # Because of boost/property_map/dynamic_property_map.hpp:
        "@boost_property_map//:headers_only",
        # Because of boost/detail/workaround.hpp:
        "@boost_config//:headers_only",
        # Because of boost/range/end.hpp:
        "@boost_range//:headers_only",
        # Because of boost/type_traits/is_rvalue_reference.hpp:
        "@boost_type_traits//:headers_only",
        # Because of boost/mpl/logical.hpp:
        "@boost_mpl//:headers_only",
        # Because of boost/iterator/iterator_traits.hpp:
        "@boost_iterator//:headers_only",
        # Because of boost/tuple/tuple.hpp:
        "@boost_tuple//:headers_only",
        # Because of boost/any.hpp:
        "@boost_any//:headers_only",
        # Because of boost/lexical_cast.hpp:
        "@boost_lexical_cast//:headers_only",
        # Because of boost/multi_index_container.hpp:
        "@boost_multi_index//:headers_only",
        # Because of boost/spirit/include/classic_multi_pass.hpp:
        "@boost_spirit//:headers_only",
        # Because of boost/xpressive/xpressive_static.hpp:
        "@boost_xpressive//:headers_only",
        # Because of boost/static_assert.hpp:
        "@boost_static_assert//:headers_only",
        # Because of boost/preprocessor/iterate.hpp:
        "@boost_preprocessor//:headers_only",
        # Because of boost/smart_ptr.hpp:
        "@boost_smart_ptr//:headers_only",
        # Because of boost/predef.h:
        "@boost_predef//:headers_only",
        # Because of boost/utility/value_init.hpp:
        "@boost_utility//:headers_only",
        # Because of boost/type_index.hpp:
        "@boost_type_index//:headers_only",
        # Because of boost/move/utility.hpp:
        "@boost_move//:headers_only",
        # Because of boost/serialization/collection_size_type.hpp:
        "@boost_serialization//:headers_only",
        # Because of boost/concept_archetype.hpp:
        "@boost_concept_check//:headers_only",
        # Because of boost/functional/hash.hpp:
        "@boost_container_hash//:headers_only",
        # Because of boost/integer.hpp:
        "@boost_integer//:headers_only",
        # Because of boost/unordered_set.hpp:
        "@boost_unordered//:headers_only",
        # Because of boost/container/container_fwd.hpp:
        "@boost_container//:headers_only",
        # Because of boost/detail/reference_content.hpp:
        "@boost_detail//:headers_only",
        # Because of boost/proto/core.hpp:
        "@boost_proto//:headers_only",
        # Because of boost/numeric/conversion/converter.hpp:
        "@boost_numeric_conversion//:headers_only",
        # Because of boost/fusion/sequence/comparison/equal_to.hpp:
        "@boost_fusion//:headers_only",
        # Because of boost/array.hpp:
        "@boost_array//:headers_only",
        # Because of boost/implicit_cast.hpp:
        "@boost_conversion//:headers_only",
        # Because of boost/mpi/datatype.hpp:
        "@boost_mpi//:headers_only",
        # Because of boost/typeof/typeof.hpp:
        "@boost_typeof//:headers_only",
        # Because of boost/thread/once.hpp:
        "@boost_thread//:headers_only",
        # Because of boost/math/special_functions/fpclassify.hpp:
        "@boost_math//:headers_only",
        # Because of boost/exception/info.hpp:
        "@boost_exception//:headers_only",
        # Because of boost/intrusive/pointer_traits.hpp:
        "@boost_intrusive//:headers_only",
        # Because of boost/atomic.hpp:
        "@boost_atomic//:headers_only",
        # Because of boost/chrono/duration.hpp:
        "@boost_chrono//:headers_only",
        # Because of boost/date_time/microsec_time_clock.hpp:
        "@boost_date_time//:headers_only",
        # Because of boost/system/error_code.hpp:
        "@boost_system//:headers_only",
        # Because of boost/ratio/ratio.hpp:
        "@boost_ratio//:headers_only",
        # Because of boost/rational.hpp:
        "@boost_rational//:headers_only",
        # Because of boost/pending/disjoint_sets.hpp:
        "@boost_disjoint_sets//:headers_only",
        # Because of boost/random/uniform_01.hpp:
        "@boost_random//:headers_only",
        # Because of boost/parameter/binding.hpp:
        "@boost_parameter//:headers_only",
        # Because of boost/bimap.hpp:
        "@boost_bimap//:headers_only",
        # Because of boost/tti/has_member_function.hpp:
        "@boost_tti//:headers_only",
        # Because of boost/mp11/integral.hpp:
        "@boost_mp11//:headers_only",
        # Because of boost/function_types/property_tags.hpp:
        "@boost_function_types//:headers_only",
    ],
)
