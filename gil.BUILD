package(default_visibility = ["//visibility:public"])

cc_library(
    name = "headers_only",
    hdrs = [
        "include/boost/gil/algorithm.hpp",
        "include/boost/gil/bit_aligned_pixel_iterator.hpp",
        "include/boost/gil/bit_aligned_pixel_reference.hpp",
        "include/boost/gil/channel.hpp",
        "include/boost/gil/channel_algorithm.hpp",
        "include/boost/gil/cmyk.hpp",
        "include/boost/gil/color_base.hpp",
        "include/boost/gil/color_base_algorithm.hpp",
        "include/boost/gil/color_convert.hpp",
        "include/boost/gil/deprecated.hpp",
        "include/boost/gil/device_n.hpp",
        "include/boost/gil/extension/dynamic_image/algorithm.hpp",
        "include/boost/gil/extension/dynamic_image/any_image.hpp",
        "include/boost/gil/extension/dynamic_image/any_image_view.hpp",
        "include/boost/gil/extension/dynamic_image/apply_operation.hpp",
        "include/boost/gil/extension/dynamic_image/apply_operation_base.hpp",
        "include/boost/gil/extension/dynamic_image/dynamic_at_c.hpp",
        "include/boost/gil/extension/dynamic_image/dynamic_image_all.hpp",
        "include/boost/gil/extension/dynamic_image/image_view_factory.hpp",
        "include/boost/gil/extension/dynamic_image/reduce.hpp",
        "include/boost/gil/extension/dynamic_image/variant.hpp",
        "include/boost/gil/extension/io/dynamic_io.hpp",
        "include/boost/gil/extension/io/io_error.hpp",
        "include/boost/gil/extension/io/jpeg_dynamic_io.hpp",
        "include/boost/gil/extension/io/jpeg_io.hpp",
        "include/boost/gil/extension/io/jpeg_io_private.hpp",
        "include/boost/gil/extension/io/png_dynamic_io.hpp",
        "include/boost/gil/extension/io/png_io.hpp",
        "include/boost/gil/extension/io/png_io_private.hpp",
        "include/boost/gil/extension/io/tiff_dynamic_io.hpp",
        "include/boost/gil/extension/io/tiff_io.hpp",
        "include/boost/gil/gil_all.hpp",
        "include/boost/gil/gil_concept.hpp",
        "include/boost/gil/gil_config.hpp",
        "include/boost/gil/gray.hpp",
        "include/boost/gil/image.hpp",
        "include/boost/gil/image_view.hpp",
        "include/boost/gil/image_view_factory.hpp",
        "include/boost/gil/iterator_from_2d.hpp",
        "include/boost/gil/locator.hpp",
        "include/boost/gil/metafunctions.hpp",
        "include/boost/gil/packed_pixel.hpp",
        "include/boost/gil/pixel.hpp",
        "include/boost/gil/pixel_iterator.hpp",
        "include/boost/gil/pixel_iterator_adaptor.hpp",
        "include/boost/gil/planar_pixel_iterator.hpp",
        "include/boost/gil/planar_pixel_reference.hpp",
        "include/boost/gil/position_iterator.hpp",
        "include/boost/gil/rgb.hpp",
        "include/boost/gil/rgba.hpp",
        "include/boost/gil/step_iterator.hpp",
        "include/boost/gil/typedefs.hpp",
        "include/boost/gil/utilities.hpp",
        "include/boost/gil/virtual_locator.hpp",
    ],
    includes = [
        "include",
    ],
)

cc_library(
    name = "gil",
    srcs = [],
    hdrs = [
        "include/boost/gil/algorithm.hpp",
        "include/boost/gil/bit_aligned_pixel_iterator.hpp",
        "include/boost/gil/bit_aligned_pixel_reference.hpp",
        "include/boost/gil/channel.hpp",
        "include/boost/gil/channel_algorithm.hpp",
        "include/boost/gil/cmyk.hpp",
        "include/boost/gil/color_base.hpp",
        "include/boost/gil/color_base_algorithm.hpp",
        "include/boost/gil/color_convert.hpp",
        "include/boost/gil/deprecated.hpp",
        "include/boost/gil/device_n.hpp",
        "include/boost/gil/extension/dynamic_image/algorithm.hpp",
        "include/boost/gil/extension/dynamic_image/any_image.hpp",
        "include/boost/gil/extension/dynamic_image/any_image_view.hpp",
        "include/boost/gil/extension/dynamic_image/apply_operation.hpp",
        "include/boost/gil/extension/dynamic_image/apply_operation_base.hpp",
        "include/boost/gil/extension/dynamic_image/dynamic_at_c.hpp",
        "include/boost/gil/extension/dynamic_image/dynamic_image_all.hpp",
        "include/boost/gil/extension/dynamic_image/image_view_factory.hpp",
        "include/boost/gil/extension/dynamic_image/reduce.hpp",
        "include/boost/gil/extension/dynamic_image/variant.hpp",
        "include/boost/gil/extension/io/dynamic_io.hpp",
        "include/boost/gil/extension/io/io_error.hpp",
        "include/boost/gil/extension/io/jpeg_dynamic_io.hpp",
        "include/boost/gil/extension/io/jpeg_io.hpp",
        "include/boost/gil/extension/io/jpeg_io_private.hpp",
        "include/boost/gil/extension/io/png_dynamic_io.hpp",
        "include/boost/gil/extension/io/png_io.hpp",
        "include/boost/gil/extension/io/png_io_private.hpp",
        "include/boost/gil/extension/io/tiff_dynamic_io.hpp",
        "include/boost/gil/extension/io/tiff_io.hpp",
        "include/boost/gil/gil_all.hpp",
        "include/boost/gil/gil_concept.hpp",
        "include/boost/gil/gil_config.hpp",
        "include/boost/gil/gray.hpp",
        "include/boost/gil/image.hpp",
        "include/boost/gil/image_view.hpp",
        "include/boost/gil/image_view_factory.hpp",
        "include/boost/gil/iterator_from_2d.hpp",
        "include/boost/gil/locator.hpp",
        "include/boost/gil/metafunctions.hpp",
        "include/boost/gil/packed_pixel.hpp",
        "include/boost/gil/pixel.hpp",
        "include/boost/gil/pixel_iterator.hpp",
        "include/boost/gil/pixel_iterator_adaptor.hpp",
        "include/boost/gil/planar_pixel_iterator.hpp",
        "include/boost/gil/planar_pixel_reference.hpp",
        "include/boost/gil/position_iterator.hpp",
        "include/boost/gil/rgb.hpp",
        "include/boost/gil/rgba.hpp",
        "include/boost/gil/step_iterator.hpp",
        "include/boost/gil/typedefs.hpp",
        "include/boost/gil/utilities.hpp",
        "include/boost/gil/virtual_locator.hpp",
    ],
    copts = [],
    deps = [
        ":headers_only",
        # Because of boost/mpl/size.hpp:
        "@boost_mpl//:headers_only",
        # Because of boost/static_assert.hpp:
        "@boost_static_assert//:headers_only",
        # Because of boost/iterator/iterator_adaptor.hpp:
        "@boost_iterator//:headers_only",
        # Because of boost/type_traits.hpp:
        "@boost_type_traits//:headers_only",
        # Because of boost/config/no_tr1/cmath.hpp:
        "@boost_config//:headers_only",
        # Because of boost/preprocessor/repeat.hpp:
        "@boost_preprocessor//:headers_only",
        # Because of boost/utility/enable_if.hpp:
        "@boost_core//:headers_only",
        # Because of boost/shared_ptr.hpp:
        "@boost_smart_ptr//:headers_only",
        # Because of boost/bind.hpp:
        "@boost_bind//:headers_only",
        # Because of boost/concept_check.hpp:
        "@boost_concept_check//:headers_only",
        # Because of boost/detail/indirect_traits.hpp:
        "@boost_detail//:headers_only",
        # Because of boost/typeof/typeof.hpp:
        "@boost_typeof//:headers_only",
        # Because of boost/throw_exception.hpp:
        "@boost_throw_exception//:headers_only",
        # Because of boost/assert.hpp:
        "@boost_assert//:headers_only",
        # Because of boost/predef.h:
        "@boost_predef//:headers_only",
    ],
)
